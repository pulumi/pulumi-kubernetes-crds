// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ServiceBindingRequest expresses intent to bind an operator-backed service with an application workload.
type ServiceBindingRequestType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ServiceBindingRequestSpec defines the desired state of ServiceBindingRequest
	Spec *ServiceBindingRequestSpec `pulumi:"spec"`
	// ServiceBindingRequestStatus defines the observed state of ServiceBindingRequest
	Status *ServiceBindingRequestStatus `pulumi:"status"`
}

// ServiceBindingRequestTypeInput is an input type that accepts ServiceBindingRequestTypeArgs and ServiceBindingRequestTypeOutput values.
// You can construct a concrete instance of `ServiceBindingRequestTypeInput` via:
//
//          ServiceBindingRequestTypeArgs{...}
type ServiceBindingRequestTypeInput interface {
	pulumi.Input

	ToServiceBindingRequestTypeOutput() ServiceBindingRequestTypeOutput
	ToServiceBindingRequestTypeOutputWithContext(context.Context) ServiceBindingRequestTypeOutput
}

// ServiceBindingRequest expresses intent to bind an operator-backed service with an application workload.
type ServiceBindingRequestTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// ServiceBindingRequestSpec defines the desired state of ServiceBindingRequest
	Spec ServiceBindingRequestSpecPtrInput `pulumi:"spec"`
	// ServiceBindingRequestStatus defines the observed state of ServiceBindingRequest
	Status ServiceBindingRequestStatusPtrInput `pulumi:"status"`
}

func (ServiceBindingRequestTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestType)(nil)).Elem()
}

func (i ServiceBindingRequestTypeArgs) ToServiceBindingRequestTypeOutput() ServiceBindingRequestTypeOutput {
	return i.ToServiceBindingRequestTypeOutputWithContext(context.Background())
}

func (i ServiceBindingRequestTypeArgs) ToServiceBindingRequestTypeOutputWithContext(ctx context.Context) ServiceBindingRequestTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestTypeOutput)
}

// ServiceBindingRequest expresses intent to bind an operator-backed service with an application workload.
type ServiceBindingRequestTypeOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestType)(nil)).Elem()
}

func (o ServiceBindingRequestTypeOutput) ToServiceBindingRequestTypeOutput() ServiceBindingRequestTypeOutput {
	return o
}

func (o ServiceBindingRequestTypeOutput) ToServiceBindingRequestTypeOutputWithContext(ctx context.Context) ServiceBindingRequestTypeOutput {
	return o
}

func (o ServiceBindingRequestTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// ServiceBindingRequestSpec defines the desired state of ServiceBindingRequest
func (o ServiceBindingRequestTypeOutput) Spec() ServiceBindingRequestSpecPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestType) *ServiceBindingRequestSpec { return v.Spec }).(ServiceBindingRequestSpecPtrOutput)
}

// ServiceBindingRequestStatus defines the observed state of ServiceBindingRequest
func (o ServiceBindingRequestTypeOutput) Status() ServiceBindingRequestStatusPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestType) *ServiceBindingRequestStatus { return v.Status }).(ServiceBindingRequestStatusPtrOutput)
}

type ServiceBindingRequestMetadata struct {
}

// ServiceBindingRequestMetadataInput is an input type that accepts ServiceBindingRequestMetadataArgs and ServiceBindingRequestMetadataOutput values.
// You can construct a concrete instance of `ServiceBindingRequestMetadataInput` via:
//
//          ServiceBindingRequestMetadataArgs{...}
type ServiceBindingRequestMetadataInput interface {
	pulumi.Input

	ToServiceBindingRequestMetadataOutput() ServiceBindingRequestMetadataOutput
	ToServiceBindingRequestMetadataOutputWithContext(context.Context) ServiceBindingRequestMetadataOutput
}

type ServiceBindingRequestMetadataArgs struct {
}

func (ServiceBindingRequestMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestMetadata)(nil)).Elem()
}

func (i ServiceBindingRequestMetadataArgs) ToServiceBindingRequestMetadataOutput() ServiceBindingRequestMetadataOutput {
	return i.ToServiceBindingRequestMetadataOutputWithContext(context.Background())
}

func (i ServiceBindingRequestMetadataArgs) ToServiceBindingRequestMetadataOutputWithContext(ctx context.Context) ServiceBindingRequestMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestMetadataOutput)
}

type ServiceBindingRequestMetadataOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestMetadata)(nil)).Elem()
}

func (o ServiceBindingRequestMetadataOutput) ToServiceBindingRequestMetadataOutput() ServiceBindingRequestMetadataOutput {
	return o
}

func (o ServiceBindingRequestMetadataOutput) ToServiceBindingRequestMetadataOutputWithContext(ctx context.Context) ServiceBindingRequestMetadataOutput {
	return o
}

// ServiceBindingRequestSpec defines the desired state of ServiceBindingRequest
type ServiceBindingRequestSpec struct {
	// ApplicationSelector is used to identify the application connecting to the backing service operator.
	ApplicationSelector *ServiceBindingRequestSpecApplicationSelector `pulumi:"applicationSelector"`
	// BackingServiceSelector is used to identify the backing service operator. Deprecation Notice: In the upcoming release, this field would be depcreated. It would be mandatory to set "backingServiceSelectors".
	BackingServiceSelector *ServiceBindingRequestSpecBackingServiceSelector `pulumi:"backingServiceSelector"`
	// BackingServiceSelectors is used to identify multiple backing services. This would be made a required field after 'BackingServiceSelector' is removed.
	BackingServiceSelectors []ServiceBindingRequestSpecBackingServiceSelectors `pulumi:"backingServiceSelectors"`
	// Custom env variables
	CustomEnvVar []ServiceBindingRequestSpecCustomEnvVar `pulumi:"customEnvVar"`
	// DetectBindingResources is flag used to bind all non-bindable variables from different subresources owned by backing operator CR.
	DetectBindingResources *bool `pulumi:"detectBindingResources"`
	// EnvVarPrefix is the prefix for environment variables
	EnvVarPrefix *string `pulumi:"envVarPrefix"`
	// MountPathPrefix is the prefix for volume mount
	MountPathPrefix *string `pulumi:"mountPathPrefix"`
}

// ServiceBindingRequestSpecInput is an input type that accepts ServiceBindingRequestSpecArgs and ServiceBindingRequestSpecOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecInput` via:
//
//          ServiceBindingRequestSpecArgs{...}
type ServiceBindingRequestSpecInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecOutput() ServiceBindingRequestSpecOutput
	ToServiceBindingRequestSpecOutputWithContext(context.Context) ServiceBindingRequestSpecOutput
}

// ServiceBindingRequestSpec defines the desired state of ServiceBindingRequest
type ServiceBindingRequestSpecArgs struct {
	// ApplicationSelector is used to identify the application connecting to the backing service operator.
	ApplicationSelector ServiceBindingRequestSpecApplicationSelectorPtrInput `pulumi:"applicationSelector"`
	// BackingServiceSelector is used to identify the backing service operator. Deprecation Notice: In the upcoming release, this field would be depcreated. It would be mandatory to set "backingServiceSelectors".
	BackingServiceSelector ServiceBindingRequestSpecBackingServiceSelectorPtrInput `pulumi:"backingServiceSelector"`
	// BackingServiceSelectors is used to identify multiple backing services. This would be made a required field after 'BackingServiceSelector' is removed.
	BackingServiceSelectors ServiceBindingRequestSpecBackingServiceSelectorsArrayInput `pulumi:"backingServiceSelectors"`
	// Custom env variables
	CustomEnvVar ServiceBindingRequestSpecCustomEnvVarArrayInput `pulumi:"customEnvVar"`
	// DetectBindingResources is flag used to bind all non-bindable variables from different subresources owned by backing operator CR.
	DetectBindingResources pulumi.BoolPtrInput `pulumi:"detectBindingResources"`
	// EnvVarPrefix is the prefix for environment variables
	EnvVarPrefix pulumi.StringPtrInput `pulumi:"envVarPrefix"`
	// MountPathPrefix is the prefix for volume mount
	MountPathPrefix pulumi.StringPtrInput `pulumi:"mountPathPrefix"`
}

func (ServiceBindingRequestSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpec)(nil)).Elem()
}

func (i ServiceBindingRequestSpecArgs) ToServiceBindingRequestSpecOutput() ServiceBindingRequestSpecOutput {
	return i.ToServiceBindingRequestSpecOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecArgs) ToServiceBindingRequestSpecOutputWithContext(ctx context.Context) ServiceBindingRequestSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecOutput)
}

func (i ServiceBindingRequestSpecArgs) ToServiceBindingRequestSpecPtrOutput() ServiceBindingRequestSpecPtrOutput {
	return i.ToServiceBindingRequestSpecPtrOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecArgs) ToServiceBindingRequestSpecPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecOutput).ToServiceBindingRequestSpecPtrOutputWithContext(ctx)
}

// ServiceBindingRequestSpecPtrInput is an input type that accepts ServiceBindingRequestSpecArgs, ServiceBindingRequestSpecPtr and ServiceBindingRequestSpecPtrOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecPtrInput` via:
//
//          ServiceBindingRequestSpecArgs{...}
//
//  or:
//
//          nil
type ServiceBindingRequestSpecPtrInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecPtrOutput() ServiceBindingRequestSpecPtrOutput
	ToServiceBindingRequestSpecPtrOutputWithContext(context.Context) ServiceBindingRequestSpecPtrOutput
}

type serviceBindingRequestSpecPtrType ServiceBindingRequestSpecArgs

func ServiceBindingRequestSpecPtr(v *ServiceBindingRequestSpecArgs) ServiceBindingRequestSpecPtrInput {
	return (*serviceBindingRequestSpecPtrType)(v)
}

func (*serviceBindingRequestSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpec)(nil)).Elem()
}

func (i *serviceBindingRequestSpecPtrType) ToServiceBindingRequestSpecPtrOutput() ServiceBindingRequestSpecPtrOutput {
	return i.ToServiceBindingRequestSpecPtrOutputWithContext(context.Background())
}

func (i *serviceBindingRequestSpecPtrType) ToServiceBindingRequestSpecPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecPtrOutput)
}

// ServiceBindingRequestSpec defines the desired state of ServiceBindingRequest
type ServiceBindingRequestSpecOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpec)(nil)).Elem()
}

func (o ServiceBindingRequestSpecOutput) ToServiceBindingRequestSpecOutput() ServiceBindingRequestSpecOutput {
	return o
}

func (o ServiceBindingRequestSpecOutput) ToServiceBindingRequestSpecOutputWithContext(ctx context.Context) ServiceBindingRequestSpecOutput {
	return o
}

func (o ServiceBindingRequestSpecOutput) ToServiceBindingRequestSpecPtrOutput() ServiceBindingRequestSpecPtrOutput {
	return o.ToServiceBindingRequestSpecPtrOutputWithContext(context.Background())
}

func (o ServiceBindingRequestSpecOutput) ToServiceBindingRequestSpecPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpec) *ServiceBindingRequestSpec {
		return &v
	}).(ServiceBindingRequestSpecPtrOutput)
}

// ApplicationSelector is used to identify the application connecting to the backing service operator.
func (o ServiceBindingRequestSpecOutput) ApplicationSelector() ServiceBindingRequestSpecApplicationSelectorPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpec) *ServiceBindingRequestSpecApplicationSelector {
		return v.ApplicationSelector
	}).(ServiceBindingRequestSpecApplicationSelectorPtrOutput)
}

// BackingServiceSelector is used to identify the backing service operator. Deprecation Notice: In the upcoming release, this field would be depcreated. It would be mandatory to set "backingServiceSelectors".
func (o ServiceBindingRequestSpecOutput) BackingServiceSelector() ServiceBindingRequestSpecBackingServiceSelectorPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpec) *ServiceBindingRequestSpecBackingServiceSelector {
		return v.BackingServiceSelector
	}).(ServiceBindingRequestSpecBackingServiceSelectorPtrOutput)
}

// BackingServiceSelectors is used to identify multiple backing services. This would be made a required field after 'BackingServiceSelector' is removed.
func (o ServiceBindingRequestSpecOutput) BackingServiceSelectors() ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpec) []ServiceBindingRequestSpecBackingServiceSelectors {
		return v.BackingServiceSelectors
	}).(ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput)
}

// Custom env variables
func (o ServiceBindingRequestSpecOutput) CustomEnvVar() ServiceBindingRequestSpecCustomEnvVarArrayOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpec) []ServiceBindingRequestSpecCustomEnvVar { return v.CustomEnvVar }).(ServiceBindingRequestSpecCustomEnvVarArrayOutput)
}

// DetectBindingResources is flag used to bind all non-bindable variables from different subresources owned by backing operator CR.
func (o ServiceBindingRequestSpecOutput) DetectBindingResources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpec) *bool { return v.DetectBindingResources }).(pulumi.BoolPtrOutput)
}

// EnvVarPrefix is the prefix for environment variables
func (o ServiceBindingRequestSpecOutput) EnvVarPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpec) *string { return v.EnvVarPrefix }).(pulumi.StringPtrOutput)
}

// MountPathPrefix is the prefix for volume mount
func (o ServiceBindingRequestSpecOutput) MountPathPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpec) *string { return v.MountPathPrefix }).(pulumi.StringPtrOutput)
}

type ServiceBindingRequestSpecPtrOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpec)(nil)).Elem()
}

func (o ServiceBindingRequestSpecPtrOutput) ToServiceBindingRequestSpecPtrOutput() ServiceBindingRequestSpecPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecPtrOutput) ToServiceBindingRequestSpecPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecPtrOutput) Elem() ServiceBindingRequestSpecOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpec) ServiceBindingRequestSpec { return *v }).(ServiceBindingRequestSpecOutput)
}

// ApplicationSelector is used to identify the application connecting to the backing service operator.
func (o ServiceBindingRequestSpecPtrOutput) ApplicationSelector() ServiceBindingRequestSpecApplicationSelectorPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpec) *ServiceBindingRequestSpecApplicationSelector {
		if v == nil {
			return nil
		}
		return v.ApplicationSelector
	}).(ServiceBindingRequestSpecApplicationSelectorPtrOutput)
}

// BackingServiceSelector is used to identify the backing service operator. Deprecation Notice: In the upcoming release, this field would be depcreated. It would be mandatory to set "backingServiceSelectors".
func (o ServiceBindingRequestSpecPtrOutput) BackingServiceSelector() ServiceBindingRequestSpecBackingServiceSelectorPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpec) *ServiceBindingRequestSpecBackingServiceSelector {
		if v == nil {
			return nil
		}
		return v.BackingServiceSelector
	}).(ServiceBindingRequestSpecBackingServiceSelectorPtrOutput)
}

// BackingServiceSelectors is used to identify multiple backing services. This would be made a required field after 'BackingServiceSelector' is removed.
func (o ServiceBindingRequestSpecPtrOutput) BackingServiceSelectors() ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpec) []ServiceBindingRequestSpecBackingServiceSelectors {
		if v == nil {
			return nil
		}
		return v.BackingServiceSelectors
	}).(ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput)
}

// Custom env variables
func (o ServiceBindingRequestSpecPtrOutput) CustomEnvVar() ServiceBindingRequestSpecCustomEnvVarArrayOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpec) []ServiceBindingRequestSpecCustomEnvVar {
		if v == nil {
			return nil
		}
		return v.CustomEnvVar
	}).(ServiceBindingRequestSpecCustomEnvVarArrayOutput)
}

// DetectBindingResources is flag used to bind all non-bindable variables from different subresources owned by backing operator CR.
func (o ServiceBindingRequestSpecPtrOutput) DetectBindingResources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpec) *bool {
		if v == nil {
			return nil
		}
		return v.DetectBindingResources
	}).(pulumi.BoolPtrOutput)
}

// EnvVarPrefix is the prefix for environment variables
func (o ServiceBindingRequestSpecPtrOutput) EnvVarPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpec) *string {
		if v == nil {
			return nil
		}
		return v.EnvVarPrefix
	}).(pulumi.StringPtrOutput)
}

// MountPathPrefix is the prefix for volume mount
func (o ServiceBindingRequestSpecPtrOutput) MountPathPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpec) *string {
		if v == nil {
			return nil
		}
		return v.MountPathPrefix
	}).(pulumi.StringPtrOutput)
}

// ApplicationSelector is used to identify the application connecting to the backing service operator.
type ServiceBindingRequestSpecApplicationSelector struct {
	// BindingPath refers to the path in the application workload's schema where the binding workload would be referenced.
	BindingPath *ServiceBindingRequestSpecApplicationSelectorBindingPath `pulumi:"bindingPath"`
	Group       string                                                   `pulumi:"group"`
	// A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
	LabelSelector *ServiceBindingRequestSpecApplicationSelectorLabelSelector `pulumi:"labelSelector"`
	Resource      string                                                     `pulumi:"resource"`
	ResourceRef   *string                                                    `pulumi:"resourceRef"`
	Version       string                                                     `pulumi:"version"`
}

// ServiceBindingRequestSpecApplicationSelectorInput is an input type that accepts ServiceBindingRequestSpecApplicationSelectorArgs and ServiceBindingRequestSpecApplicationSelectorOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecApplicationSelectorInput` via:
//
//          ServiceBindingRequestSpecApplicationSelectorArgs{...}
type ServiceBindingRequestSpecApplicationSelectorInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecApplicationSelectorOutput() ServiceBindingRequestSpecApplicationSelectorOutput
	ToServiceBindingRequestSpecApplicationSelectorOutputWithContext(context.Context) ServiceBindingRequestSpecApplicationSelectorOutput
}

// ApplicationSelector is used to identify the application connecting to the backing service operator.
type ServiceBindingRequestSpecApplicationSelectorArgs struct {
	// BindingPath refers to the path in the application workload's schema where the binding workload would be referenced.
	BindingPath ServiceBindingRequestSpecApplicationSelectorBindingPathPtrInput `pulumi:"bindingPath"`
	Group       pulumi.StringInput                                              `pulumi:"group"`
	// A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
	LabelSelector ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrInput `pulumi:"labelSelector"`
	Resource      pulumi.StringInput                                                `pulumi:"resource"`
	ResourceRef   pulumi.StringPtrInput                                             `pulumi:"resourceRef"`
	Version       pulumi.StringInput                                                `pulumi:"version"`
}

func (ServiceBindingRequestSpecApplicationSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecApplicationSelector)(nil)).Elem()
}

func (i ServiceBindingRequestSpecApplicationSelectorArgs) ToServiceBindingRequestSpecApplicationSelectorOutput() ServiceBindingRequestSpecApplicationSelectorOutput {
	return i.ToServiceBindingRequestSpecApplicationSelectorOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecApplicationSelectorArgs) ToServiceBindingRequestSpecApplicationSelectorOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecApplicationSelectorOutput)
}

func (i ServiceBindingRequestSpecApplicationSelectorArgs) ToServiceBindingRequestSpecApplicationSelectorPtrOutput() ServiceBindingRequestSpecApplicationSelectorPtrOutput {
	return i.ToServiceBindingRequestSpecApplicationSelectorPtrOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecApplicationSelectorArgs) ToServiceBindingRequestSpecApplicationSelectorPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecApplicationSelectorOutput).ToServiceBindingRequestSpecApplicationSelectorPtrOutputWithContext(ctx)
}

// ServiceBindingRequestSpecApplicationSelectorPtrInput is an input type that accepts ServiceBindingRequestSpecApplicationSelectorArgs, ServiceBindingRequestSpecApplicationSelectorPtr and ServiceBindingRequestSpecApplicationSelectorPtrOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecApplicationSelectorPtrInput` via:
//
//          ServiceBindingRequestSpecApplicationSelectorArgs{...}
//
//  or:
//
//          nil
type ServiceBindingRequestSpecApplicationSelectorPtrInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecApplicationSelectorPtrOutput() ServiceBindingRequestSpecApplicationSelectorPtrOutput
	ToServiceBindingRequestSpecApplicationSelectorPtrOutputWithContext(context.Context) ServiceBindingRequestSpecApplicationSelectorPtrOutput
}

type serviceBindingRequestSpecApplicationSelectorPtrType ServiceBindingRequestSpecApplicationSelectorArgs

func ServiceBindingRequestSpecApplicationSelectorPtr(v *ServiceBindingRequestSpecApplicationSelectorArgs) ServiceBindingRequestSpecApplicationSelectorPtrInput {
	return (*serviceBindingRequestSpecApplicationSelectorPtrType)(v)
}

func (*serviceBindingRequestSpecApplicationSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecApplicationSelector)(nil)).Elem()
}

func (i *serviceBindingRequestSpecApplicationSelectorPtrType) ToServiceBindingRequestSpecApplicationSelectorPtrOutput() ServiceBindingRequestSpecApplicationSelectorPtrOutput {
	return i.ToServiceBindingRequestSpecApplicationSelectorPtrOutputWithContext(context.Background())
}

func (i *serviceBindingRequestSpecApplicationSelectorPtrType) ToServiceBindingRequestSpecApplicationSelectorPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecApplicationSelectorPtrOutput)
}

// ApplicationSelector is used to identify the application connecting to the backing service operator.
type ServiceBindingRequestSpecApplicationSelectorOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecApplicationSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecApplicationSelector)(nil)).Elem()
}

func (o ServiceBindingRequestSpecApplicationSelectorOutput) ToServiceBindingRequestSpecApplicationSelectorOutput() ServiceBindingRequestSpecApplicationSelectorOutput {
	return o
}

func (o ServiceBindingRequestSpecApplicationSelectorOutput) ToServiceBindingRequestSpecApplicationSelectorOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorOutput {
	return o
}

func (o ServiceBindingRequestSpecApplicationSelectorOutput) ToServiceBindingRequestSpecApplicationSelectorPtrOutput() ServiceBindingRequestSpecApplicationSelectorPtrOutput {
	return o.ToServiceBindingRequestSpecApplicationSelectorPtrOutputWithContext(context.Background())
}

func (o ServiceBindingRequestSpecApplicationSelectorOutput) ToServiceBindingRequestSpecApplicationSelectorPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecApplicationSelector) *ServiceBindingRequestSpecApplicationSelector {
		return &v
	}).(ServiceBindingRequestSpecApplicationSelectorPtrOutput)
}

// BindingPath refers to the path in the application workload's schema where the binding workload would be referenced.
func (o ServiceBindingRequestSpecApplicationSelectorOutput) BindingPath() ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecApplicationSelector) *ServiceBindingRequestSpecApplicationSelectorBindingPath {
		return v.BindingPath
	}).(ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput)
}

func (o ServiceBindingRequestSpecApplicationSelectorOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecApplicationSelector) string { return v.Group }).(pulumi.StringOutput)
}

// A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
func (o ServiceBindingRequestSpecApplicationSelectorOutput) LabelSelector() ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecApplicationSelector) *ServiceBindingRequestSpecApplicationSelectorLabelSelector {
		return v.LabelSelector
	}).(ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput)
}

func (o ServiceBindingRequestSpecApplicationSelectorOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecApplicationSelector) string { return v.Resource }).(pulumi.StringOutput)
}

func (o ServiceBindingRequestSpecApplicationSelectorOutput) ResourceRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecApplicationSelector) *string { return v.ResourceRef }).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestSpecApplicationSelectorOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecApplicationSelector) string { return v.Version }).(pulumi.StringOutput)
}

type ServiceBindingRequestSpecApplicationSelectorPtrOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecApplicationSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecApplicationSelector)(nil)).Elem()
}

func (o ServiceBindingRequestSpecApplicationSelectorPtrOutput) ToServiceBindingRequestSpecApplicationSelectorPtrOutput() ServiceBindingRequestSpecApplicationSelectorPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecApplicationSelectorPtrOutput) ToServiceBindingRequestSpecApplicationSelectorPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecApplicationSelectorPtrOutput) Elem() ServiceBindingRequestSpecApplicationSelectorOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecApplicationSelector) ServiceBindingRequestSpecApplicationSelector {
		return *v
	}).(ServiceBindingRequestSpecApplicationSelectorOutput)
}

// BindingPath refers to the path in the application workload's schema where the binding workload would be referenced.
func (o ServiceBindingRequestSpecApplicationSelectorPtrOutput) BindingPath() ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecApplicationSelector) *ServiceBindingRequestSpecApplicationSelectorBindingPath {
		if v == nil {
			return nil
		}
		return v.BindingPath
	}).(ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput)
}

func (o ServiceBindingRequestSpecApplicationSelectorPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecApplicationSelector) *string {
		if v == nil {
			return nil
		}
		return &v.Group
	}).(pulumi.StringPtrOutput)
}

// A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
func (o ServiceBindingRequestSpecApplicationSelectorPtrOutput) LabelSelector() ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecApplicationSelector) *ServiceBindingRequestSpecApplicationSelectorLabelSelector {
		if v == nil {
			return nil
		}
		return v.LabelSelector
	}).(ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput)
}

func (o ServiceBindingRequestSpecApplicationSelectorPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecApplicationSelector) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestSpecApplicationSelectorPtrOutput) ResourceRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecApplicationSelector) *string {
		if v == nil {
			return nil
		}
		return v.ResourceRef
	}).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestSpecApplicationSelectorPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecApplicationSelector) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// BindingPath refers to the path in the application workload's schema where the binding workload would be referenced.
type ServiceBindingRequestSpecApplicationSelectorBindingPath struct {
	// ContainersPath defines the path to the corev1.Containers reference The default location is going to this: "spec.template.spec.containers"
	ContainersPath *string `pulumi:"containersPath"`
	// SecretPath defines the path to a string field where the secret needs to be assigned. The default name is going to the value of the name of SBR CR (metadata.name)
	SecretPath *string `pulumi:"secretPath"`
}

// ServiceBindingRequestSpecApplicationSelectorBindingPathInput is an input type that accepts ServiceBindingRequestSpecApplicationSelectorBindingPathArgs and ServiceBindingRequestSpecApplicationSelectorBindingPathOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecApplicationSelectorBindingPathInput` via:
//
//          ServiceBindingRequestSpecApplicationSelectorBindingPathArgs{...}
type ServiceBindingRequestSpecApplicationSelectorBindingPathInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecApplicationSelectorBindingPathOutput() ServiceBindingRequestSpecApplicationSelectorBindingPathOutput
	ToServiceBindingRequestSpecApplicationSelectorBindingPathOutputWithContext(context.Context) ServiceBindingRequestSpecApplicationSelectorBindingPathOutput
}

// BindingPath refers to the path in the application workload's schema where the binding workload would be referenced.
type ServiceBindingRequestSpecApplicationSelectorBindingPathArgs struct {
	// ContainersPath defines the path to the corev1.Containers reference The default location is going to this: "spec.template.spec.containers"
	ContainersPath pulumi.StringPtrInput `pulumi:"containersPath"`
	// SecretPath defines the path to a string field where the secret needs to be assigned. The default name is going to the value of the name of SBR CR (metadata.name)
	SecretPath pulumi.StringPtrInput `pulumi:"secretPath"`
}

func (ServiceBindingRequestSpecApplicationSelectorBindingPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecApplicationSelectorBindingPath)(nil)).Elem()
}

func (i ServiceBindingRequestSpecApplicationSelectorBindingPathArgs) ToServiceBindingRequestSpecApplicationSelectorBindingPathOutput() ServiceBindingRequestSpecApplicationSelectorBindingPathOutput {
	return i.ToServiceBindingRequestSpecApplicationSelectorBindingPathOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecApplicationSelectorBindingPathArgs) ToServiceBindingRequestSpecApplicationSelectorBindingPathOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorBindingPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecApplicationSelectorBindingPathOutput)
}

func (i ServiceBindingRequestSpecApplicationSelectorBindingPathArgs) ToServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput() ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput {
	return i.ToServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecApplicationSelectorBindingPathArgs) ToServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecApplicationSelectorBindingPathOutput).ToServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutputWithContext(ctx)
}

// ServiceBindingRequestSpecApplicationSelectorBindingPathPtrInput is an input type that accepts ServiceBindingRequestSpecApplicationSelectorBindingPathArgs, ServiceBindingRequestSpecApplicationSelectorBindingPathPtr and ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecApplicationSelectorBindingPathPtrInput` via:
//
//          ServiceBindingRequestSpecApplicationSelectorBindingPathArgs{...}
//
//  or:
//
//          nil
type ServiceBindingRequestSpecApplicationSelectorBindingPathPtrInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput() ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput
	ToServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutputWithContext(context.Context) ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput
}

type serviceBindingRequestSpecApplicationSelectorBindingPathPtrType ServiceBindingRequestSpecApplicationSelectorBindingPathArgs

func ServiceBindingRequestSpecApplicationSelectorBindingPathPtr(v *ServiceBindingRequestSpecApplicationSelectorBindingPathArgs) ServiceBindingRequestSpecApplicationSelectorBindingPathPtrInput {
	return (*serviceBindingRequestSpecApplicationSelectorBindingPathPtrType)(v)
}

func (*serviceBindingRequestSpecApplicationSelectorBindingPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecApplicationSelectorBindingPath)(nil)).Elem()
}

func (i *serviceBindingRequestSpecApplicationSelectorBindingPathPtrType) ToServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput() ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput {
	return i.ToServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutputWithContext(context.Background())
}

func (i *serviceBindingRequestSpecApplicationSelectorBindingPathPtrType) ToServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput)
}

// BindingPath refers to the path in the application workload's schema where the binding workload would be referenced.
type ServiceBindingRequestSpecApplicationSelectorBindingPathOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecApplicationSelectorBindingPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecApplicationSelectorBindingPath)(nil)).Elem()
}

func (o ServiceBindingRequestSpecApplicationSelectorBindingPathOutput) ToServiceBindingRequestSpecApplicationSelectorBindingPathOutput() ServiceBindingRequestSpecApplicationSelectorBindingPathOutput {
	return o
}

func (o ServiceBindingRequestSpecApplicationSelectorBindingPathOutput) ToServiceBindingRequestSpecApplicationSelectorBindingPathOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorBindingPathOutput {
	return o
}

func (o ServiceBindingRequestSpecApplicationSelectorBindingPathOutput) ToServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput() ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput {
	return o.ToServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutputWithContext(context.Background())
}

func (o ServiceBindingRequestSpecApplicationSelectorBindingPathOutput) ToServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecApplicationSelectorBindingPath) *ServiceBindingRequestSpecApplicationSelectorBindingPath {
		return &v
	}).(ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput)
}

// ContainersPath defines the path to the corev1.Containers reference The default location is going to this: "spec.template.spec.containers"
func (o ServiceBindingRequestSpecApplicationSelectorBindingPathOutput) ContainersPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecApplicationSelectorBindingPath) *string { return v.ContainersPath }).(pulumi.StringPtrOutput)
}

// SecretPath defines the path to a string field where the secret needs to be assigned. The default name is going to the value of the name of SBR CR (metadata.name)
func (o ServiceBindingRequestSpecApplicationSelectorBindingPathOutput) SecretPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecApplicationSelectorBindingPath) *string { return v.SecretPath }).(pulumi.StringPtrOutput)
}

type ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecApplicationSelectorBindingPath)(nil)).Elem()
}

func (o ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput) ToServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput() ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput) ToServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput) Elem() ServiceBindingRequestSpecApplicationSelectorBindingPathOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecApplicationSelectorBindingPath) ServiceBindingRequestSpecApplicationSelectorBindingPath {
		return *v
	}).(ServiceBindingRequestSpecApplicationSelectorBindingPathOutput)
}

// ContainersPath defines the path to the corev1.Containers reference The default location is going to this: "spec.template.spec.containers"
func (o ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput) ContainersPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecApplicationSelectorBindingPath) *string {
		if v == nil {
			return nil
		}
		return v.ContainersPath
	}).(pulumi.StringPtrOutput)
}

// SecretPath defines the path to a string field where the secret needs to be assigned. The default name is going to the value of the name of SBR CR (metadata.name)
func (o ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput) SecretPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecApplicationSelectorBindingPath) *string {
		if v == nil {
			return nil
		}
		return v.SecretPath
	}).(pulumi.StringPtrOutput)
}

// A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
type ServiceBindingRequestSpecApplicationSelectorLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ServiceBindingRequestSpecApplicationSelectorLabelSelectorInput is an input type that accepts ServiceBindingRequestSpecApplicationSelectorLabelSelectorArgs and ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecApplicationSelectorLabelSelectorInput` via:
//
//          ServiceBindingRequestSpecApplicationSelectorLabelSelectorArgs{...}
type ServiceBindingRequestSpecApplicationSelectorLabelSelectorInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput() ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput
	ToServiceBindingRequestSpecApplicationSelectorLabelSelectorOutputWithContext(context.Context) ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput
}

// A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
type ServiceBindingRequestSpecApplicationSelectorLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ServiceBindingRequestSpecApplicationSelectorLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecApplicationSelectorLabelSelector)(nil)).Elem()
}

func (i ServiceBindingRequestSpecApplicationSelectorLabelSelectorArgs) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput() ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput {
	return i.ToServiceBindingRequestSpecApplicationSelectorLabelSelectorOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecApplicationSelectorLabelSelectorArgs) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput)
}

func (i ServiceBindingRequestSpecApplicationSelectorLabelSelectorArgs) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput() ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput {
	return i.ToServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecApplicationSelectorLabelSelectorArgs) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput).ToServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutputWithContext(ctx)
}

// ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrInput is an input type that accepts ServiceBindingRequestSpecApplicationSelectorLabelSelectorArgs, ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtr and ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrInput` via:
//
//          ServiceBindingRequestSpecApplicationSelectorLabelSelectorArgs{...}
//
//  or:
//
//          nil
type ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput() ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput
	ToServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutputWithContext(context.Context) ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput
}

type serviceBindingRequestSpecApplicationSelectorLabelSelectorPtrType ServiceBindingRequestSpecApplicationSelectorLabelSelectorArgs

func ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtr(v *ServiceBindingRequestSpecApplicationSelectorLabelSelectorArgs) ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrInput {
	return (*serviceBindingRequestSpecApplicationSelectorLabelSelectorPtrType)(v)
}

func (*serviceBindingRequestSpecApplicationSelectorLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecApplicationSelectorLabelSelector)(nil)).Elem()
}

func (i *serviceBindingRequestSpecApplicationSelectorLabelSelectorPtrType) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput() ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput {
	return i.ToServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *serviceBindingRequestSpecApplicationSelectorLabelSelectorPtrType) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput)
}

// A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
type ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecApplicationSelectorLabelSelector)(nil)).Elem()
}

func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput() ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput {
	return o
}

func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput {
	return o
}

func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput() ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput {
	return o.ToServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutputWithContext(context.Background())
}

func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecApplicationSelectorLabelSelector) *ServiceBindingRequestSpecApplicationSelectorLabelSelector {
		return &v
	}).(ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput) MatchExpressions() ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecApplicationSelectorLabelSelector) []ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecApplicationSelectorLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecApplicationSelectorLabelSelector)(nil)).Elem()
}

func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput() ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput) Elem() ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecApplicationSelectorLabelSelector) ServiceBindingRequestSpecApplicationSelectorLabelSelector {
		return *v
	}).(ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput) MatchExpressions() ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecApplicationSelectorLabelSelector) []ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecApplicationSelectorLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsInput is an input type that accepts ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArgs and ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsInput` via:
//
//          ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArgs{...}
type ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput() ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput
	ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutputWithContext(context.Context) ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArgs) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput() ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput {
	return i.ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArgs) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput)
}

// ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayInput is an input type that accepts ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArray and ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayInput` via:
//
//          ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArray{ ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArgs{...} }
type ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput() ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput
	ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput
}

type ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArray []ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsInput

func (ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArray) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput() ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput {
	return i.ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArray) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput() ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput {
	return o
}

func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput() ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressions {
		return vs[0].([]ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabels struct {
}

// ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsInput is an input type that accepts ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsArgs and ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsInput` via:
//
//          ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsArgs{...}
type ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutput() ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutput
	ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutputWithContext(context.Context) ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsArgs struct {
}

func (ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabels)(nil)).Elem()
}

func (i ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsArgs) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutput() ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutput {
	return i.ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsArgs) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabels)(nil)).Elem()
}

func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutput) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutput() ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutput {
	return o
}

func (o ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutput) ToServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutput {
	return o
}

// BackingServiceSelector is used to identify the backing service operator. Deprecation Notice: In the upcoming release, this field would be depcreated. It would be mandatory to set "backingServiceSelectors".
type ServiceBindingRequestSpecBackingServiceSelector struct {
	EnvVarPrefix *string `pulumi:"envVarPrefix"`
	Group        string  `pulumi:"group"`
	Id           *string `pulumi:"id"`
	Kind         string  `pulumi:"kind"`
	Namespace    *string `pulumi:"namespace"`
	ResourceRef  string  `pulumi:"resourceRef"`
	Version      string  `pulumi:"version"`
}

// ServiceBindingRequestSpecBackingServiceSelectorInput is an input type that accepts ServiceBindingRequestSpecBackingServiceSelectorArgs and ServiceBindingRequestSpecBackingServiceSelectorOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecBackingServiceSelectorInput` via:
//
//          ServiceBindingRequestSpecBackingServiceSelectorArgs{...}
type ServiceBindingRequestSpecBackingServiceSelectorInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecBackingServiceSelectorOutput() ServiceBindingRequestSpecBackingServiceSelectorOutput
	ToServiceBindingRequestSpecBackingServiceSelectorOutputWithContext(context.Context) ServiceBindingRequestSpecBackingServiceSelectorOutput
}

// BackingServiceSelector is used to identify the backing service operator. Deprecation Notice: In the upcoming release, this field would be depcreated. It would be mandatory to set "backingServiceSelectors".
type ServiceBindingRequestSpecBackingServiceSelectorArgs struct {
	EnvVarPrefix pulumi.StringPtrInput `pulumi:"envVarPrefix"`
	Group        pulumi.StringInput    `pulumi:"group"`
	Id           pulumi.StringPtrInput `pulumi:"id"`
	Kind         pulumi.StringInput    `pulumi:"kind"`
	Namespace    pulumi.StringPtrInput `pulumi:"namespace"`
	ResourceRef  pulumi.StringInput    `pulumi:"resourceRef"`
	Version      pulumi.StringInput    `pulumi:"version"`
}

func (ServiceBindingRequestSpecBackingServiceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecBackingServiceSelector)(nil)).Elem()
}

func (i ServiceBindingRequestSpecBackingServiceSelectorArgs) ToServiceBindingRequestSpecBackingServiceSelectorOutput() ServiceBindingRequestSpecBackingServiceSelectorOutput {
	return i.ToServiceBindingRequestSpecBackingServiceSelectorOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecBackingServiceSelectorArgs) ToServiceBindingRequestSpecBackingServiceSelectorOutputWithContext(ctx context.Context) ServiceBindingRequestSpecBackingServiceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecBackingServiceSelectorOutput)
}

func (i ServiceBindingRequestSpecBackingServiceSelectorArgs) ToServiceBindingRequestSpecBackingServiceSelectorPtrOutput() ServiceBindingRequestSpecBackingServiceSelectorPtrOutput {
	return i.ToServiceBindingRequestSpecBackingServiceSelectorPtrOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecBackingServiceSelectorArgs) ToServiceBindingRequestSpecBackingServiceSelectorPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecBackingServiceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecBackingServiceSelectorOutput).ToServiceBindingRequestSpecBackingServiceSelectorPtrOutputWithContext(ctx)
}

// ServiceBindingRequestSpecBackingServiceSelectorPtrInput is an input type that accepts ServiceBindingRequestSpecBackingServiceSelectorArgs, ServiceBindingRequestSpecBackingServiceSelectorPtr and ServiceBindingRequestSpecBackingServiceSelectorPtrOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecBackingServiceSelectorPtrInput` via:
//
//          ServiceBindingRequestSpecBackingServiceSelectorArgs{...}
//
//  or:
//
//          nil
type ServiceBindingRequestSpecBackingServiceSelectorPtrInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecBackingServiceSelectorPtrOutput() ServiceBindingRequestSpecBackingServiceSelectorPtrOutput
	ToServiceBindingRequestSpecBackingServiceSelectorPtrOutputWithContext(context.Context) ServiceBindingRequestSpecBackingServiceSelectorPtrOutput
}

type serviceBindingRequestSpecBackingServiceSelectorPtrType ServiceBindingRequestSpecBackingServiceSelectorArgs

func ServiceBindingRequestSpecBackingServiceSelectorPtr(v *ServiceBindingRequestSpecBackingServiceSelectorArgs) ServiceBindingRequestSpecBackingServiceSelectorPtrInput {
	return (*serviceBindingRequestSpecBackingServiceSelectorPtrType)(v)
}

func (*serviceBindingRequestSpecBackingServiceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecBackingServiceSelector)(nil)).Elem()
}

func (i *serviceBindingRequestSpecBackingServiceSelectorPtrType) ToServiceBindingRequestSpecBackingServiceSelectorPtrOutput() ServiceBindingRequestSpecBackingServiceSelectorPtrOutput {
	return i.ToServiceBindingRequestSpecBackingServiceSelectorPtrOutputWithContext(context.Background())
}

func (i *serviceBindingRequestSpecBackingServiceSelectorPtrType) ToServiceBindingRequestSpecBackingServiceSelectorPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecBackingServiceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecBackingServiceSelectorPtrOutput)
}

// BackingServiceSelector is used to identify the backing service operator. Deprecation Notice: In the upcoming release, this field would be depcreated. It would be mandatory to set "backingServiceSelectors".
type ServiceBindingRequestSpecBackingServiceSelectorOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecBackingServiceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecBackingServiceSelector)(nil)).Elem()
}

func (o ServiceBindingRequestSpecBackingServiceSelectorOutput) ToServiceBindingRequestSpecBackingServiceSelectorOutput() ServiceBindingRequestSpecBackingServiceSelectorOutput {
	return o
}

func (o ServiceBindingRequestSpecBackingServiceSelectorOutput) ToServiceBindingRequestSpecBackingServiceSelectorOutputWithContext(ctx context.Context) ServiceBindingRequestSpecBackingServiceSelectorOutput {
	return o
}

func (o ServiceBindingRequestSpecBackingServiceSelectorOutput) ToServiceBindingRequestSpecBackingServiceSelectorPtrOutput() ServiceBindingRequestSpecBackingServiceSelectorPtrOutput {
	return o.ToServiceBindingRequestSpecBackingServiceSelectorPtrOutputWithContext(context.Background())
}

func (o ServiceBindingRequestSpecBackingServiceSelectorOutput) ToServiceBindingRequestSpecBackingServiceSelectorPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecBackingServiceSelectorPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecBackingServiceSelector) *ServiceBindingRequestSpecBackingServiceSelector {
		return &v
	}).(ServiceBindingRequestSpecBackingServiceSelectorPtrOutput)
}
func (o ServiceBindingRequestSpecBackingServiceSelectorOutput) EnvVarPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecBackingServiceSelector) *string { return v.EnvVarPrefix }).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecBackingServiceSelector) string { return v.Group }).(pulumi.StringOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecBackingServiceSelector) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecBackingServiceSelector) string { return v.Kind }).(pulumi.StringOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecBackingServiceSelector) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorOutput) ResourceRef() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecBackingServiceSelector) string { return v.ResourceRef }).(pulumi.StringOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecBackingServiceSelector) string { return v.Version }).(pulumi.StringOutput)
}

type ServiceBindingRequestSpecBackingServiceSelectorPtrOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecBackingServiceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecBackingServiceSelector)(nil)).Elem()
}

func (o ServiceBindingRequestSpecBackingServiceSelectorPtrOutput) ToServiceBindingRequestSpecBackingServiceSelectorPtrOutput() ServiceBindingRequestSpecBackingServiceSelectorPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecBackingServiceSelectorPtrOutput) ToServiceBindingRequestSpecBackingServiceSelectorPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecBackingServiceSelectorPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecBackingServiceSelectorPtrOutput) Elem() ServiceBindingRequestSpecBackingServiceSelectorOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecBackingServiceSelector) ServiceBindingRequestSpecBackingServiceSelector {
		return *v
	}).(ServiceBindingRequestSpecBackingServiceSelectorOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorPtrOutput) EnvVarPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecBackingServiceSelector) *string {
		if v == nil {
			return nil
		}
		return v.EnvVarPrefix
	}).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecBackingServiceSelector) *string {
		if v == nil {
			return nil
		}
		return &v.Group
	}).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecBackingServiceSelector) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecBackingServiceSelector) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecBackingServiceSelector) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorPtrOutput) ResourceRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecBackingServiceSelector) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceRef
	}).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecBackingServiceSelector) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// BackingServiceSelector defines the selector based on resource name, version, and resource kind
type ServiceBindingRequestSpecBackingServiceSelectors struct {
	EnvVarPrefix *string `pulumi:"envVarPrefix"`
	Group        string  `pulumi:"group"`
	Id           *string `pulumi:"id"`
	Kind         string  `pulumi:"kind"`
	Namespace    *string `pulumi:"namespace"`
	ResourceRef  string  `pulumi:"resourceRef"`
	Version      string  `pulumi:"version"`
}

// ServiceBindingRequestSpecBackingServiceSelectorsInput is an input type that accepts ServiceBindingRequestSpecBackingServiceSelectorsArgs and ServiceBindingRequestSpecBackingServiceSelectorsOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecBackingServiceSelectorsInput` via:
//
//          ServiceBindingRequestSpecBackingServiceSelectorsArgs{...}
type ServiceBindingRequestSpecBackingServiceSelectorsInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecBackingServiceSelectorsOutput() ServiceBindingRequestSpecBackingServiceSelectorsOutput
	ToServiceBindingRequestSpecBackingServiceSelectorsOutputWithContext(context.Context) ServiceBindingRequestSpecBackingServiceSelectorsOutput
}

// BackingServiceSelector defines the selector based on resource name, version, and resource kind
type ServiceBindingRequestSpecBackingServiceSelectorsArgs struct {
	EnvVarPrefix pulumi.StringPtrInput `pulumi:"envVarPrefix"`
	Group        pulumi.StringInput    `pulumi:"group"`
	Id           pulumi.StringPtrInput `pulumi:"id"`
	Kind         pulumi.StringInput    `pulumi:"kind"`
	Namespace    pulumi.StringPtrInput `pulumi:"namespace"`
	ResourceRef  pulumi.StringInput    `pulumi:"resourceRef"`
	Version      pulumi.StringInput    `pulumi:"version"`
}

func (ServiceBindingRequestSpecBackingServiceSelectorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecBackingServiceSelectors)(nil)).Elem()
}

func (i ServiceBindingRequestSpecBackingServiceSelectorsArgs) ToServiceBindingRequestSpecBackingServiceSelectorsOutput() ServiceBindingRequestSpecBackingServiceSelectorsOutput {
	return i.ToServiceBindingRequestSpecBackingServiceSelectorsOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecBackingServiceSelectorsArgs) ToServiceBindingRequestSpecBackingServiceSelectorsOutputWithContext(ctx context.Context) ServiceBindingRequestSpecBackingServiceSelectorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecBackingServiceSelectorsOutput)
}

// ServiceBindingRequestSpecBackingServiceSelectorsArrayInput is an input type that accepts ServiceBindingRequestSpecBackingServiceSelectorsArray and ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecBackingServiceSelectorsArrayInput` via:
//
//          ServiceBindingRequestSpecBackingServiceSelectorsArray{ ServiceBindingRequestSpecBackingServiceSelectorsArgs{...} }
type ServiceBindingRequestSpecBackingServiceSelectorsArrayInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecBackingServiceSelectorsArrayOutput() ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput
	ToServiceBindingRequestSpecBackingServiceSelectorsArrayOutputWithContext(context.Context) ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput
}

type ServiceBindingRequestSpecBackingServiceSelectorsArray []ServiceBindingRequestSpecBackingServiceSelectorsInput

func (ServiceBindingRequestSpecBackingServiceSelectorsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceBindingRequestSpecBackingServiceSelectors)(nil)).Elem()
}

func (i ServiceBindingRequestSpecBackingServiceSelectorsArray) ToServiceBindingRequestSpecBackingServiceSelectorsArrayOutput() ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput {
	return i.ToServiceBindingRequestSpecBackingServiceSelectorsArrayOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecBackingServiceSelectorsArray) ToServiceBindingRequestSpecBackingServiceSelectorsArrayOutputWithContext(ctx context.Context) ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput)
}

// BackingServiceSelector defines the selector based on resource name, version, and resource kind
type ServiceBindingRequestSpecBackingServiceSelectorsOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecBackingServiceSelectorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecBackingServiceSelectors)(nil)).Elem()
}

func (o ServiceBindingRequestSpecBackingServiceSelectorsOutput) ToServiceBindingRequestSpecBackingServiceSelectorsOutput() ServiceBindingRequestSpecBackingServiceSelectorsOutput {
	return o
}

func (o ServiceBindingRequestSpecBackingServiceSelectorsOutput) ToServiceBindingRequestSpecBackingServiceSelectorsOutputWithContext(ctx context.Context) ServiceBindingRequestSpecBackingServiceSelectorsOutput {
	return o
}

func (o ServiceBindingRequestSpecBackingServiceSelectorsOutput) EnvVarPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecBackingServiceSelectors) *string { return v.EnvVarPrefix }).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorsOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecBackingServiceSelectors) string { return v.Group }).(pulumi.StringOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecBackingServiceSelectors) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorsOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecBackingServiceSelectors) string { return v.Kind }).(pulumi.StringOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecBackingServiceSelectors) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorsOutput) ResourceRef() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecBackingServiceSelectors) string { return v.ResourceRef }).(pulumi.StringOutput)
}

func (o ServiceBindingRequestSpecBackingServiceSelectorsOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecBackingServiceSelectors) string { return v.Version }).(pulumi.StringOutput)
}

type ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceBindingRequestSpecBackingServiceSelectors)(nil)).Elem()
}

func (o ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput) ToServiceBindingRequestSpecBackingServiceSelectorsArrayOutput() ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput {
	return o
}

func (o ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput) ToServiceBindingRequestSpecBackingServiceSelectorsArrayOutputWithContext(ctx context.Context) ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput {
	return o
}

func (o ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput) Index(i pulumi.IntInput) ServiceBindingRequestSpecBackingServiceSelectorsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceBindingRequestSpecBackingServiceSelectors {
		return vs[0].([]ServiceBindingRequestSpecBackingServiceSelectors)[vs[1].(int)]
	}).(ServiceBindingRequestSpecBackingServiceSelectorsOutput)
}

// EnvVar represents an environment variable present in a Container.
type ServiceBindingRequestSpecCustomEnvVar struct {
	// Name of the environment variable. Must be a C_IDENTIFIER.
	Name string `pulumi:"name"`
	// Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
	Value *string `pulumi:"value"`
	// Source for the environment variable's value. Cannot be used if value is not empty.
	ValueFrom *ServiceBindingRequestSpecCustomEnvVarValueFrom `pulumi:"valueFrom"`
}

// ServiceBindingRequestSpecCustomEnvVarInput is an input type that accepts ServiceBindingRequestSpecCustomEnvVarArgs and ServiceBindingRequestSpecCustomEnvVarOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecCustomEnvVarInput` via:
//
//          ServiceBindingRequestSpecCustomEnvVarArgs{...}
type ServiceBindingRequestSpecCustomEnvVarInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecCustomEnvVarOutput() ServiceBindingRequestSpecCustomEnvVarOutput
	ToServiceBindingRequestSpecCustomEnvVarOutputWithContext(context.Context) ServiceBindingRequestSpecCustomEnvVarOutput
}

// EnvVar represents an environment variable present in a Container.
type ServiceBindingRequestSpecCustomEnvVarArgs struct {
	// Name of the environment variable. Must be a C_IDENTIFIER.
	Name pulumi.StringInput `pulumi:"name"`
	// Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Source for the environment variable's value. Cannot be used if value is not empty.
	ValueFrom ServiceBindingRequestSpecCustomEnvVarValueFromPtrInput `pulumi:"valueFrom"`
}

func (ServiceBindingRequestSpecCustomEnvVarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecCustomEnvVar)(nil)).Elem()
}

func (i ServiceBindingRequestSpecCustomEnvVarArgs) ToServiceBindingRequestSpecCustomEnvVarOutput() ServiceBindingRequestSpecCustomEnvVarOutput {
	return i.ToServiceBindingRequestSpecCustomEnvVarOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecCustomEnvVarArgs) ToServiceBindingRequestSpecCustomEnvVarOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecCustomEnvVarOutput)
}

// ServiceBindingRequestSpecCustomEnvVarArrayInput is an input type that accepts ServiceBindingRequestSpecCustomEnvVarArray and ServiceBindingRequestSpecCustomEnvVarArrayOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecCustomEnvVarArrayInput` via:
//
//          ServiceBindingRequestSpecCustomEnvVarArray{ ServiceBindingRequestSpecCustomEnvVarArgs{...} }
type ServiceBindingRequestSpecCustomEnvVarArrayInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecCustomEnvVarArrayOutput() ServiceBindingRequestSpecCustomEnvVarArrayOutput
	ToServiceBindingRequestSpecCustomEnvVarArrayOutputWithContext(context.Context) ServiceBindingRequestSpecCustomEnvVarArrayOutput
}

type ServiceBindingRequestSpecCustomEnvVarArray []ServiceBindingRequestSpecCustomEnvVarInput

func (ServiceBindingRequestSpecCustomEnvVarArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceBindingRequestSpecCustomEnvVar)(nil)).Elem()
}

func (i ServiceBindingRequestSpecCustomEnvVarArray) ToServiceBindingRequestSpecCustomEnvVarArrayOutput() ServiceBindingRequestSpecCustomEnvVarArrayOutput {
	return i.ToServiceBindingRequestSpecCustomEnvVarArrayOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecCustomEnvVarArray) ToServiceBindingRequestSpecCustomEnvVarArrayOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecCustomEnvVarArrayOutput)
}

// EnvVar represents an environment variable present in a Container.
type ServiceBindingRequestSpecCustomEnvVarOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecCustomEnvVarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecCustomEnvVar)(nil)).Elem()
}

func (o ServiceBindingRequestSpecCustomEnvVarOutput) ToServiceBindingRequestSpecCustomEnvVarOutput() ServiceBindingRequestSpecCustomEnvVarOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarOutput) ToServiceBindingRequestSpecCustomEnvVarOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarOutput {
	return o
}

// Name of the environment variable. Must be a C_IDENTIFIER.
func (o ServiceBindingRequestSpecCustomEnvVarOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVar) string { return v.Name }).(pulumi.StringOutput)
}

// Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
func (o ServiceBindingRequestSpecCustomEnvVarOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVar) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Source for the environment variable's value. Cannot be used if value is not empty.
func (o ServiceBindingRequestSpecCustomEnvVarOutput) ValueFrom() ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVar) *ServiceBindingRequestSpecCustomEnvVarValueFrom {
		return v.ValueFrom
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput)
}

type ServiceBindingRequestSpecCustomEnvVarArrayOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecCustomEnvVarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceBindingRequestSpecCustomEnvVar)(nil)).Elem()
}

func (o ServiceBindingRequestSpecCustomEnvVarArrayOutput) ToServiceBindingRequestSpecCustomEnvVarArrayOutput() ServiceBindingRequestSpecCustomEnvVarArrayOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarArrayOutput) ToServiceBindingRequestSpecCustomEnvVarArrayOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarArrayOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarArrayOutput) Index(i pulumi.IntInput) ServiceBindingRequestSpecCustomEnvVarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceBindingRequestSpecCustomEnvVar {
		return vs[0].([]ServiceBindingRequestSpecCustomEnvVar)[vs[1].(int)]
	}).(ServiceBindingRequestSpecCustomEnvVarOutput)
}

// Source for the environment variable's value. Cannot be used if value is not empty.
type ServiceBindingRequestSpecCustomEnvVarValueFrom struct {
	// Selects a key of a ConfigMap.
	ConfigMapKeyRef *ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef `pulumi:"configMapKeyRef"`
	// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
	FieldRef *ServiceBindingRequestSpecCustomEnvVarValueFromFieldRef `pulumi:"fieldRef"`
	// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
	ResourceFieldRef *ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef `pulumi:"resourceFieldRef"`
	// Selects a key of a secret in the pod's namespace
	SecretKeyRef *ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef `pulumi:"secretKeyRef"`
}

// ServiceBindingRequestSpecCustomEnvVarValueFromInput is an input type that accepts ServiceBindingRequestSpecCustomEnvVarValueFromArgs and ServiceBindingRequestSpecCustomEnvVarValueFromOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecCustomEnvVarValueFromInput` via:
//
//          ServiceBindingRequestSpecCustomEnvVarValueFromArgs{...}
type ServiceBindingRequestSpecCustomEnvVarValueFromInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecCustomEnvVarValueFromOutput() ServiceBindingRequestSpecCustomEnvVarValueFromOutput
	ToServiceBindingRequestSpecCustomEnvVarValueFromOutputWithContext(context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromOutput
}

// Source for the environment variable's value. Cannot be used if value is not empty.
type ServiceBindingRequestSpecCustomEnvVarValueFromArgs struct {
	// Selects a key of a ConfigMap.
	ConfigMapKeyRef ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrInput `pulumi:"configMapKeyRef"`
	// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
	FieldRef ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrInput `pulumi:"fieldRef"`
	// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
	ResourceFieldRef ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrInput `pulumi:"resourceFieldRef"`
	// Selects a key of a secret in the pod's namespace
	SecretKeyRef ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrInput `pulumi:"secretKeyRef"`
}

func (ServiceBindingRequestSpecCustomEnvVarValueFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecCustomEnvVarValueFrom)(nil)).Elem()
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromOutput() ServiceBindingRequestSpecCustomEnvVarValueFromOutput {
	return i.ToServiceBindingRequestSpecCustomEnvVarValueFromOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecCustomEnvVarValueFromOutput)
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput {
	return i.ToServiceBindingRequestSpecCustomEnvVarValueFromPtrOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecCustomEnvVarValueFromOutput).ToServiceBindingRequestSpecCustomEnvVarValueFromPtrOutputWithContext(ctx)
}

// ServiceBindingRequestSpecCustomEnvVarValueFromPtrInput is an input type that accepts ServiceBindingRequestSpecCustomEnvVarValueFromArgs, ServiceBindingRequestSpecCustomEnvVarValueFromPtr and ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecCustomEnvVarValueFromPtrInput` via:
//
//          ServiceBindingRequestSpecCustomEnvVarValueFromArgs{...}
//
//  or:
//
//          nil
type ServiceBindingRequestSpecCustomEnvVarValueFromPtrInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput
	ToServiceBindingRequestSpecCustomEnvVarValueFromPtrOutputWithContext(context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput
}

type serviceBindingRequestSpecCustomEnvVarValueFromPtrType ServiceBindingRequestSpecCustomEnvVarValueFromArgs

func ServiceBindingRequestSpecCustomEnvVarValueFromPtr(v *ServiceBindingRequestSpecCustomEnvVarValueFromArgs) ServiceBindingRequestSpecCustomEnvVarValueFromPtrInput {
	return (*serviceBindingRequestSpecCustomEnvVarValueFromPtrType)(v)
}

func (*serviceBindingRequestSpecCustomEnvVarValueFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecCustomEnvVarValueFrom)(nil)).Elem()
}

func (i *serviceBindingRequestSpecCustomEnvVarValueFromPtrType) ToServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput {
	return i.ToServiceBindingRequestSpecCustomEnvVarValueFromPtrOutputWithContext(context.Background())
}

func (i *serviceBindingRequestSpecCustomEnvVarValueFromPtrType) ToServiceBindingRequestSpecCustomEnvVarValueFromPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput)
}

// Source for the environment variable's value. Cannot be used if value is not empty.
type ServiceBindingRequestSpecCustomEnvVarValueFromOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecCustomEnvVarValueFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecCustomEnvVarValueFrom)(nil)).Elem()
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromOutput() ServiceBindingRequestSpecCustomEnvVarValueFromOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput {
	return o.ToServiceBindingRequestSpecCustomEnvVarValueFromPtrOutputWithContext(context.Background())
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFrom) *ServiceBindingRequestSpecCustomEnvVarValueFrom {
		return &v
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput)
}

// Selects a key of a ConfigMap.
func (o ServiceBindingRequestSpecCustomEnvVarValueFromOutput) ConfigMapKeyRef() ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFrom) *ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef {
		return v.ConfigMapKeyRef
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput)
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
func (o ServiceBindingRequestSpecCustomEnvVarValueFromOutput) FieldRef() ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFrom) *ServiceBindingRequestSpecCustomEnvVarValueFromFieldRef {
		return v.FieldRef
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
func (o ServiceBindingRequestSpecCustomEnvVarValueFromOutput) ResourceFieldRef() ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFrom) *ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef {
		return v.ResourceFieldRef
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput)
}

// Selects a key of a secret in the pod's namespace
func (o ServiceBindingRequestSpecCustomEnvVarValueFromOutput) SecretKeyRef() ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFrom) *ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef {
		return v.SecretKeyRef
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput)
}

type ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecCustomEnvVarValueFrom)(nil)).Elem()
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput) Elem() ServiceBindingRequestSpecCustomEnvVarValueFromOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFrom) ServiceBindingRequestSpecCustomEnvVarValueFrom {
		return *v
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromOutput)
}

// Selects a key of a ConfigMap.
func (o ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput) ConfigMapKeyRef() ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFrom) *ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput)
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
func (o ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput) FieldRef() ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFrom) *ServiceBindingRequestSpecCustomEnvVarValueFromFieldRef {
		if v == nil {
			return nil
		}
		return v.FieldRef
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
func (o ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput) ResourceFieldRef() ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFrom) *ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef {
		if v == nil {
			return nil
		}
		return v.ResourceFieldRef
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput)
}

// Selects a key of a secret in the pod's namespace
func (o ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput) SecretKeyRef() ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFrom) *ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput)
}

// Selects a key of a ConfigMap.
type ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef struct {
	// The key to select.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefInput is an input type that accepts ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefArgs and ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefInput` via:
//
//          ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefArgs{...}
type ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput() ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput
	ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutputWithContext(context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput
}

// Selects a key of a ConfigMap.
type ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefArgs struct {
	// The key to select.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput() ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput {
	return i.ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput)
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput {
	return i.ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput).ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutputWithContext(ctx)
}

// ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrInput is an input type that accepts ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefArgs, ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtr and ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrInput` via:
//
//          ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefArgs{...}
//
//  or:
//
//          nil
type ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput
	ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutputWithContext(context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput
}

type serviceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrType ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefArgs

func ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtr(v *ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefArgs) ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrInput {
	return (*serviceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrType)(v)
}

func (*serviceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i *serviceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrType) ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput {
	return i.ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i *serviceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrType) ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput)
}

// Selects a key of a ConfigMap.
type ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput() ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput {
	return o.ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef) *ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef {
		return &v
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput)
}

// The key to select.
func (o ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput) Elem() ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef) ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef {
		return *v
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput)
}

// The key to select.
func (o ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
type ServiceBindingRequestSpecCustomEnvVarValueFromFieldRef struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion *string `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath string `pulumi:"fieldPath"`
}

// ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefInput is an input type that accepts ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefArgs and ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefInput` via:
//
//          ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefArgs{...}
type ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput() ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput
	ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutputWithContext(context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
type ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefArgs struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath pulumi.StringInput `pulumi:"fieldPath"`
}

func (ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecCustomEnvVarValueFromFieldRef)(nil)).Elem()
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput() ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput {
	return i.ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput)
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput {
	return i.ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput).ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutputWithContext(ctx)
}

// ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrInput is an input type that accepts ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefArgs, ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtr and ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrInput` via:
//
//          ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefArgs{...}
//
//  or:
//
//          nil
type ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput
	ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutputWithContext(context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput
}

type serviceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrType ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefArgs

func ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtr(v *ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefArgs) ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrInput {
	return (*serviceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrType)(v)
}

func (*serviceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecCustomEnvVarValueFromFieldRef)(nil)).Elem()
}

func (i *serviceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrType) ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput {
	return i.ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i *serviceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrType) ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput)
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
type ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecCustomEnvVarValueFromFieldRef)(nil)).Elem()
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput() ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput {
	return o.ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFromFieldRef) *ServiceBindingRequestSpecCustomEnvVarValueFromFieldRef {
		return &v
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFromFieldRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput) FieldPath() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFromFieldRef) string { return v.FieldPath }).(pulumi.StringOutput)
}

type ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecCustomEnvVarValueFromFieldRef)(nil)).Elem()
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput) Elem() ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFromFieldRef) ServiceBindingRequestSpecCustomEnvVarValueFromFieldRef {
		return *v
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
type ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef struct {
	// Container name: required for volumes, optional for env vars
	ContainerName *string `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor *string `pulumi:"divisor"`
	// Required: resource to select
	Resource string `pulumi:"resource"`
}

// ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefInput is an input type that accepts ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefArgs and ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefInput` via:
//
//          ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefArgs{...}
type ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput() ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput
	ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutputWithContext(context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
type ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefArgs struct {
	// Container name: required for volumes, optional for env vars
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor pulumi.StringPtrInput `pulumi:"divisor"`
	// Required: resource to select
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef)(nil)).Elem()
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput() ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput {
	return i.ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput)
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput {
	return i.ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput).ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutputWithContext(ctx)
}

// ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrInput is an input type that accepts ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefArgs, ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtr and ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrInput` via:
//
//          ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefArgs{...}
//
//  or:
//
//          nil
type ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput
	ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutputWithContext(context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput
}

type serviceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrType ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefArgs

func ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtr(v *ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefArgs) ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrInput {
	return (*serviceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrType)(v)
}

func (*serviceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef)(nil)).Elem()
}

func (i *serviceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrType) ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput {
	return i.ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i *serviceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrType) ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
type ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef)(nil)).Elem()
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput() ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput {
	return o.ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef) *ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef {
		return &v
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput)
}

// Container name: required for volumes, optional for env vars
func (o ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput) Divisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef) *string { return v.Divisor }).(pulumi.StringPtrOutput)
}

// Required: resource to select
func (o ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef) string { return v.Resource }).(pulumi.StringOutput)
}

type ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef)(nil)).Elem()
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput) Elem() ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef) ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef {
		return *v
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput)
}

// Container name: required for volumes, optional for env vars
func (o ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput) Divisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(pulumi.StringPtrOutput)
}

// Required: resource to select
func (o ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Selects a key of a secret in the pod's namespace
type ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefInput is an input type that accepts ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefArgs and ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefInput` via:
//
//          ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefArgs{...}
type ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput() ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput
	ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutputWithContext(context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput
}

// Selects a key of a secret in the pod's namespace
type ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef)(nil)).Elem()
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput() ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput {
	return i.ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput)
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput {
	return i.ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefArgs) ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput).ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutputWithContext(ctx)
}

// ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrInput is an input type that accepts ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefArgs, ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtr and ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput values.
// You can construct a concrete instance of `ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrInput` via:
//
//          ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefArgs{...}
//
//  or:
//
//          nil
type ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrInput interface {
	pulumi.Input

	ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput
	ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutputWithContext(context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput
}

type serviceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrType ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefArgs

func ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtr(v *ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefArgs) ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrInput {
	return (*serviceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrType)(v)
}

func (*serviceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef)(nil)).Elem()
}

func (i *serviceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrType) ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput {
	return i.ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i *serviceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrType) ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput)
}

// Selects a key of a secret in the pod's namespace
type ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef)(nil)).Elem()
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput() ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput {
	return o.ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef) *ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef {
		return &v
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef)(nil)).Elem()
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput() ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput) ToServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput {
	return o
}

func (o ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput) Elem() ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef) ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef {
		return *v
	}).(ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// ServiceBindingRequestStatus defines the observed state of ServiceBindingRequest
type ServiceBindingRequestStatus struct {
	// Applications contain all the applications filtered by name or label
	Applications []ServiceBindingRequestStatusApplications `pulumi:"applications"`
	// Conditions describes the state of the operator's reconciliation functionality.
	Conditions []ServiceBindingRequestStatusConditions `pulumi:"conditions"`
	// Secret is the name of the intermediate secret
	Secret string `pulumi:"secret"`
}

// ServiceBindingRequestStatusInput is an input type that accepts ServiceBindingRequestStatusArgs and ServiceBindingRequestStatusOutput values.
// You can construct a concrete instance of `ServiceBindingRequestStatusInput` via:
//
//          ServiceBindingRequestStatusArgs{...}
type ServiceBindingRequestStatusInput interface {
	pulumi.Input

	ToServiceBindingRequestStatusOutput() ServiceBindingRequestStatusOutput
	ToServiceBindingRequestStatusOutputWithContext(context.Context) ServiceBindingRequestStatusOutput
}

// ServiceBindingRequestStatus defines the observed state of ServiceBindingRequest
type ServiceBindingRequestStatusArgs struct {
	// Applications contain all the applications filtered by name or label
	Applications ServiceBindingRequestStatusApplicationsArrayInput `pulumi:"applications"`
	// Conditions describes the state of the operator's reconciliation functionality.
	Conditions ServiceBindingRequestStatusConditionsArrayInput `pulumi:"conditions"`
	// Secret is the name of the intermediate secret
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (ServiceBindingRequestStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestStatus)(nil)).Elem()
}

func (i ServiceBindingRequestStatusArgs) ToServiceBindingRequestStatusOutput() ServiceBindingRequestStatusOutput {
	return i.ToServiceBindingRequestStatusOutputWithContext(context.Background())
}

func (i ServiceBindingRequestStatusArgs) ToServiceBindingRequestStatusOutputWithContext(ctx context.Context) ServiceBindingRequestStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestStatusOutput)
}

func (i ServiceBindingRequestStatusArgs) ToServiceBindingRequestStatusPtrOutput() ServiceBindingRequestStatusPtrOutput {
	return i.ToServiceBindingRequestStatusPtrOutputWithContext(context.Background())
}

func (i ServiceBindingRequestStatusArgs) ToServiceBindingRequestStatusPtrOutputWithContext(ctx context.Context) ServiceBindingRequestStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestStatusOutput).ToServiceBindingRequestStatusPtrOutputWithContext(ctx)
}

// ServiceBindingRequestStatusPtrInput is an input type that accepts ServiceBindingRequestStatusArgs, ServiceBindingRequestStatusPtr and ServiceBindingRequestStatusPtrOutput values.
// You can construct a concrete instance of `ServiceBindingRequestStatusPtrInput` via:
//
//          ServiceBindingRequestStatusArgs{...}
//
//  or:
//
//          nil
type ServiceBindingRequestStatusPtrInput interface {
	pulumi.Input

	ToServiceBindingRequestStatusPtrOutput() ServiceBindingRequestStatusPtrOutput
	ToServiceBindingRequestStatusPtrOutputWithContext(context.Context) ServiceBindingRequestStatusPtrOutput
}

type serviceBindingRequestStatusPtrType ServiceBindingRequestStatusArgs

func ServiceBindingRequestStatusPtr(v *ServiceBindingRequestStatusArgs) ServiceBindingRequestStatusPtrInput {
	return (*serviceBindingRequestStatusPtrType)(v)
}

func (*serviceBindingRequestStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestStatus)(nil)).Elem()
}

func (i *serviceBindingRequestStatusPtrType) ToServiceBindingRequestStatusPtrOutput() ServiceBindingRequestStatusPtrOutput {
	return i.ToServiceBindingRequestStatusPtrOutputWithContext(context.Background())
}

func (i *serviceBindingRequestStatusPtrType) ToServiceBindingRequestStatusPtrOutputWithContext(ctx context.Context) ServiceBindingRequestStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestStatusPtrOutput)
}

// ServiceBindingRequestStatus defines the observed state of ServiceBindingRequest
type ServiceBindingRequestStatusOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestStatus)(nil)).Elem()
}

func (o ServiceBindingRequestStatusOutput) ToServiceBindingRequestStatusOutput() ServiceBindingRequestStatusOutput {
	return o
}

func (o ServiceBindingRequestStatusOutput) ToServiceBindingRequestStatusOutputWithContext(ctx context.Context) ServiceBindingRequestStatusOutput {
	return o
}

func (o ServiceBindingRequestStatusOutput) ToServiceBindingRequestStatusPtrOutput() ServiceBindingRequestStatusPtrOutput {
	return o.ToServiceBindingRequestStatusPtrOutputWithContext(context.Background())
}

func (o ServiceBindingRequestStatusOutput) ToServiceBindingRequestStatusPtrOutputWithContext(ctx context.Context) ServiceBindingRequestStatusPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestStatus) *ServiceBindingRequestStatus {
		return &v
	}).(ServiceBindingRequestStatusPtrOutput)
}

// Applications contain all the applications filtered by name or label
func (o ServiceBindingRequestStatusOutput) Applications() ServiceBindingRequestStatusApplicationsArrayOutput {
	return o.ApplyT(func(v ServiceBindingRequestStatus) []ServiceBindingRequestStatusApplications { return v.Applications }).(ServiceBindingRequestStatusApplicationsArrayOutput)
}

// Conditions describes the state of the operator's reconciliation functionality.
func (o ServiceBindingRequestStatusOutput) Conditions() ServiceBindingRequestStatusConditionsArrayOutput {
	return o.ApplyT(func(v ServiceBindingRequestStatus) []ServiceBindingRequestStatusConditions { return v.Conditions }).(ServiceBindingRequestStatusConditionsArrayOutput)
}

// Secret is the name of the intermediate secret
func (o ServiceBindingRequestStatusOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestStatus) string { return v.Secret }).(pulumi.StringOutput)
}

type ServiceBindingRequestStatusPtrOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBindingRequestStatus)(nil)).Elem()
}

func (o ServiceBindingRequestStatusPtrOutput) ToServiceBindingRequestStatusPtrOutput() ServiceBindingRequestStatusPtrOutput {
	return o
}

func (o ServiceBindingRequestStatusPtrOutput) ToServiceBindingRequestStatusPtrOutputWithContext(ctx context.Context) ServiceBindingRequestStatusPtrOutput {
	return o
}

func (o ServiceBindingRequestStatusPtrOutput) Elem() ServiceBindingRequestStatusOutput {
	return o.ApplyT(func(v *ServiceBindingRequestStatus) ServiceBindingRequestStatus { return *v }).(ServiceBindingRequestStatusOutput)
}

// Applications contain all the applications filtered by name or label
func (o ServiceBindingRequestStatusPtrOutput) Applications() ServiceBindingRequestStatusApplicationsArrayOutput {
	return o.ApplyT(func(v *ServiceBindingRequestStatus) []ServiceBindingRequestStatusApplications {
		if v == nil {
			return nil
		}
		return v.Applications
	}).(ServiceBindingRequestStatusApplicationsArrayOutput)
}

// Conditions describes the state of the operator's reconciliation functionality.
func (o ServiceBindingRequestStatusPtrOutput) Conditions() ServiceBindingRequestStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ServiceBindingRequestStatus) []ServiceBindingRequestStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ServiceBindingRequestStatusConditionsArrayOutput)
}

// Secret is the name of the intermediate secret
func (o ServiceBindingRequestStatusPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceBindingRequestStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

// BoundApplication defines the application workloads to which the binding secret has injected.
type ServiceBindingRequestStatusApplications struct {
	Group string `pulumi:"group"`
	Kind  string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name    *string `pulumi:"name"`
	Version string  `pulumi:"version"`
}

// ServiceBindingRequestStatusApplicationsInput is an input type that accepts ServiceBindingRequestStatusApplicationsArgs and ServiceBindingRequestStatusApplicationsOutput values.
// You can construct a concrete instance of `ServiceBindingRequestStatusApplicationsInput` via:
//
//          ServiceBindingRequestStatusApplicationsArgs{...}
type ServiceBindingRequestStatusApplicationsInput interface {
	pulumi.Input

	ToServiceBindingRequestStatusApplicationsOutput() ServiceBindingRequestStatusApplicationsOutput
	ToServiceBindingRequestStatusApplicationsOutputWithContext(context.Context) ServiceBindingRequestStatusApplicationsOutput
}

// BoundApplication defines the application workloads to which the binding secret has injected.
type ServiceBindingRequestStatusApplicationsArgs struct {
	Group pulumi.StringInput `pulumi:"group"`
	Kind  pulumi.StringInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name    pulumi.StringPtrInput `pulumi:"name"`
	Version pulumi.StringInput    `pulumi:"version"`
}

func (ServiceBindingRequestStatusApplicationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestStatusApplications)(nil)).Elem()
}

func (i ServiceBindingRequestStatusApplicationsArgs) ToServiceBindingRequestStatusApplicationsOutput() ServiceBindingRequestStatusApplicationsOutput {
	return i.ToServiceBindingRequestStatusApplicationsOutputWithContext(context.Background())
}

func (i ServiceBindingRequestStatusApplicationsArgs) ToServiceBindingRequestStatusApplicationsOutputWithContext(ctx context.Context) ServiceBindingRequestStatusApplicationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestStatusApplicationsOutput)
}

// ServiceBindingRequestStatusApplicationsArrayInput is an input type that accepts ServiceBindingRequestStatusApplicationsArray and ServiceBindingRequestStatusApplicationsArrayOutput values.
// You can construct a concrete instance of `ServiceBindingRequestStatusApplicationsArrayInput` via:
//
//          ServiceBindingRequestStatusApplicationsArray{ ServiceBindingRequestStatusApplicationsArgs{...} }
type ServiceBindingRequestStatusApplicationsArrayInput interface {
	pulumi.Input

	ToServiceBindingRequestStatusApplicationsArrayOutput() ServiceBindingRequestStatusApplicationsArrayOutput
	ToServiceBindingRequestStatusApplicationsArrayOutputWithContext(context.Context) ServiceBindingRequestStatusApplicationsArrayOutput
}

type ServiceBindingRequestStatusApplicationsArray []ServiceBindingRequestStatusApplicationsInput

func (ServiceBindingRequestStatusApplicationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceBindingRequestStatusApplications)(nil)).Elem()
}

func (i ServiceBindingRequestStatusApplicationsArray) ToServiceBindingRequestStatusApplicationsArrayOutput() ServiceBindingRequestStatusApplicationsArrayOutput {
	return i.ToServiceBindingRequestStatusApplicationsArrayOutputWithContext(context.Background())
}

func (i ServiceBindingRequestStatusApplicationsArray) ToServiceBindingRequestStatusApplicationsArrayOutputWithContext(ctx context.Context) ServiceBindingRequestStatusApplicationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestStatusApplicationsArrayOutput)
}

// BoundApplication defines the application workloads to which the binding secret has injected.
type ServiceBindingRequestStatusApplicationsOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestStatusApplicationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestStatusApplications)(nil)).Elem()
}

func (o ServiceBindingRequestStatusApplicationsOutput) ToServiceBindingRequestStatusApplicationsOutput() ServiceBindingRequestStatusApplicationsOutput {
	return o
}

func (o ServiceBindingRequestStatusApplicationsOutput) ToServiceBindingRequestStatusApplicationsOutputWithContext(ctx context.Context) ServiceBindingRequestStatusApplicationsOutput {
	return o
}

func (o ServiceBindingRequestStatusApplicationsOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestStatusApplications) string { return v.Group }).(pulumi.StringOutput)
}

func (o ServiceBindingRequestStatusApplicationsOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestStatusApplications) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ServiceBindingRequestStatusApplicationsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestStatusApplications) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestStatusApplicationsOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestStatusApplications) string { return v.Version }).(pulumi.StringOutput)
}

type ServiceBindingRequestStatusApplicationsArrayOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestStatusApplicationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceBindingRequestStatusApplications)(nil)).Elem()
}

func (o ServiceBindingRequestStatusApplicationsArrayOutput) ToServiceBindingRequestStatusApplicationsArrayOutput() ServiceBindingRequestStatusApplicationsArrayOutput {
	return o
}

func (o ServiceBindingRequestStatusApplicationsArrayOutput) ToServiceBindingRequestStatusApplicationsArrayOutputWithContext(ctx context.Context) ServiceBindingRequestStatusApplicationsArrayOutput {
	return o
}

func (o ServiceBindingRequestStatusApplicationsArrayOutput) Index(i pulumi.IntInput) ServiceBindingRequestStatusApplicationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceBindingRequestStatusApplications {
		return vs[0].([]ServiceBindingRequestStatusApplications)[vs[1].(int)]
	}).(ServiceBindingRequestStatusApplicationsOutput)
}

// Condition represents the state of the operator's reconciliation functionality.
type ServiceBindingRequestStatusConditions struct {
	LastHeartbeatTime  *string `pulumi:"lastHeartbeatTime"`
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	Message            *string `pulumi:"message"`
	Reason             *string `pulumi:"reason"`
	Status             string  `pulumi:"status"`
	// ConditionType is the state of the operator's reconciliation functionality.
	Type string `pulumi:"type"`
}

// ServiceBindingRequestStatusConditionsInput is an input type that accepts ServiceBindingRequestStatusConditionsArgs and ServiceBindingRequestStatusConditionsOutput values.
// You can construct a concrete instance of `ServiceBindingRequestStatusConditionsInput` via:
//
//          ServiceBindingRequestStatusConditionsArgs{...}
type ServiceBindingRequestStatusConditionsInput interface {
	pulumi.Input

	ToServiceBindingRequestStatusConditionsOutput() ServiceBindingRequestStatusConditionsOutput
	ToServiceBindingRequestStatusConditionsOutputWithContext(context.Context) ServiceBindingRequestStatusConditionsOutput
}

// Condition represents the state of the operator's reconciliation functionality.
type ServiceBindingRequestStatusConditionsArgs struct {
	LastHeartbeatTime  pulumi.StringPtrInput `pulumi:"lastHeartbeatTime"`
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	Message            pulumi.StringPtrInput `pulumi:"message"`
	Reason             pulumi.StringPtrInput `pulumi:"reason"`
	Status             pulumi.StringInput    `pulumi:"status"`
	// ConditionType is the state of the operator's reconciliation functionality.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServiceBindingRequestStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestStatusConditions)(nil)).Elem()
}

func (i ServiceBindingRequestStatusConditionsArgs) ToServiceBindingRequestStatusConditionsOutput() ServiceBindingRequestStatusConditionsOutput {
	return i.ToServiceBindingRequestStatusConditionsOutputWithContext(context.Background())
}

func (i ServiceBindingRequestStatusConditionsArgs) ToServiceBindingRequestStatusConditionsOutputWithContext(ctx context.Context) ServiceBindingRequestStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestStatusConditionsOutput)
}

// ServiceBindingRequestStatusConditionsArrayInput is an input type that accepts ServiceBindingRequestStatusConditionsArray and ServiceBindingRequestStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ServiceBindingRequestStatusConditionsArrayInput` via:
//
//          ServiceBindingRequestStatusConditionsArray{ ServiceBindingRequestStatusConditionsArgs{...} }
type ServiceBindingRequestStatusConditionsArrayInput interface {
	pulumi.Input

	ToServiceBindingRequestStatusConditionsArrayOutput() ServiceBindingRequestStatusConditionsArrayOutput
	ToServiceBindingRequestStatusConditionsArrayOutputWithContext(context.Context) ServiceBindingRequestStatusConditionsArrayOutput
}

type ServiceBindingRequestStatusConditionsArray []ServiceBindingRequestStatusConditionsInput

func (ServiceBindingRequestStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceBindingRequestStatusConditions)(nil)).Elem()
}

func (i ServiceBindingRequestStatusConditionsArray) ToServiceBindingRequestStatusConditionsArrayOutput() ServiceBindingRequestStatusConditionsArrayOutput {
	return i.ToServiceBindingRequestStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ServiceBindingRequestStatusConditionsArray) ToServiceBindingRequestStatusConditionsArrayOutputWithContext(ctx context.Context) ServiceBindingRequestStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBindingRequestStatusConditionsArrayOutput)
}

// Condition represents the state of the operator's reconciliation functionality.
type ServiceBindingRequestStatusConditionsOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBindingRequestStatusConditions)(nil)).Elem()
}

func (o ServiceBindingRequestStatusConditionsOutput) ToServiceBindingRequestStatusConditionsOutput() ServiceBindingRequestStatusConditionsOutput {
	return o
}

func (o ServiceBindingRequestStatusConditionsOutput) ToServiceBindingRequestStatusConditionsOutputWithContext(ctx context.Context) ServiceBindingRequestStatusConditionsOutput {
	return o
}

func (o ServiceBindingRequestStatusConditionsOutput) LastHeartbeatTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestStatusConditions) *string { return v.LastHeartbeatTime }).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBindingRequestStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o ServiceBindingRequestStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// ConditionType is the state of the operator's reconciliation functionality.
func (o ServiceBindingRequestStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBindingRequestStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceBindingRequestStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ServiceBindingRequestStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceBindingRequestStatusConditions)(nil)).Elem()
}

func (o ServiceBindingRequestStatusConditionsArrayOutput) ToServiceBindingRequestStatusConditionsArrayOutput() ServiceBindingRequestStatusConditionsArrayOutput {
	return o
}

func (o ServiceBindingRequestStatusConditionsArrayOutput) ToServiceBindingRequestStatusConditionsArrayOutputWithContext(ctx context.Context) ServiceBindingRequestStatusConditionsArrayOutput {
	return o
}

func (o ServiceBindingRequestStatusConditionsArrayOutput) Index(i pulumi.IntInput) ServiceBindingRequestStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceBindingRequestStatusConditions {
		return vs[0].([]ServiceBindingRequestStatusConditions)[vs[1].(int)]
	}).(ServiceBindingRequestStatusConditionsOutput)
}

func init() {
	pulumi.RegisterOutputType(ServiceBindingRequestTypeOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestMetadataOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecPtrOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecApplicationSelectorOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecApplicationSelectorPtrOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecApplicationSelectorBindingPathOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecApplicationSelectorBindingPathPtrOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecApplicationSelectorLabelSelectorOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecApplicationSelectorLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecApplicationSelectorLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecBackingServiceSelectorOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecBackingServiceSelectorPtrOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecBackingServiceSelectorsOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecBackingServiceSelectorsArrayOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecCustomEnvVarOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecCustomEnvVarArrayOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecCustomEnvVarValueFromOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecCustomEnvVarValueFromPtrOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecCustomEnvVarValueFromConfigMapKeyRefPtrOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecCustomEnvVarValueFromFieldRefPtrOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecCustomEnvVarValueFromResourceFieldRefPtrOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestSpecCustomEnvVarValueFromSecretKeyRefPtrOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestStatusOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestStatusPtrOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestStatusApplicationsOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestStatusApplicationsArrayOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestStatusConditionsOutput{})
	pulumi.RegisterOutputType(ServiceBindingRequestStatusConditionsArrayOutput{})
}
