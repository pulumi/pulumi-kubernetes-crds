// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Maistra.V2
{

    [OutputType]
    public sealed class ServiceMeshControlPlaneSpecProxy
    {
        public readonly Pulumi.Kubernetes.Types.Outputs.Maistra.V2.ServiceMeshControlPlaneSpecProxyAccessLogging AccessLogging;
        public readonly int AdminPort;
        public readonly int Concurrency;
        public readonly Pulumi.Kubernetes.Types.Outputs.Maistra.V2.ServiceMeshControlPlaneSpecProxyEnvoyMetricsService EnvoyMetricsService;
        public readonly Pulumi.Kubernetes.Types.Outputs.Maistra.V2.ServiceMeshControlPlaneSpecProxyInjection Injection;
        public readonly Pulumi.Kubernetes.Types.Outputs.Maistra.V2.ServiceMeshControlPlaneSpecProxyLogging Logging;
        public readonly Pulumi.Kubernetes.Types.Outputs.Maistra.V2.ServiceMeshControlPlaneSpecProxyNetworking Networking;
        public readonly Pulumi.Kubernetes.Types.Outputs.Maistra.V2.ServiceMeshControlPlaneSpecProxyRuntime Runtime;

        [OutputConstructor]
        private ServiceMeshControlPlaneSpecProxy(
            Pulumi.Kubernetes.Types.Outputs.Maistra.V2.ServiceMeshControlPlaneSpecProxyAccessLogging accessLogging,

            int adminPort,

            int concurrency,

            Pulumi.Kubernetes.Types.Outputs.Maistra.V2.ServiceMeshControlPlaneSpecProxyEnvoyMetricsService envoyMetricsService,

            Pulumi.Kubernetes.Types.Outputs.Maistra.V2.ServiceMeshControlPlaneSpecProxyInjection injection,

            Pulumi.Kubernetes.Types.Outputs.Maistra.V2.ServiceMeshControlPlaneSpecProxyLogging logging,

            Pulumi.Kubernetes.Types.Outputs.Maistra.V2.ServiceMeshControlPlaneSpecProxyNetworking networking,

            Pulumi.Kubernetes.Types.Outputs.Maistra.V2.ServiceMeshControlPlaneSpecProxyRuntime runtime)
        {
            AccessLogging = accessLogging;
            AdminPort = adminPort;
            Concurrency = concurrency;
            EnvoyMetricsService = envoyMetricsService;
            Injection = injection;
            Logging = logging;
            Networking = networking;
            Runtime = runtime;
        }
    }
}
