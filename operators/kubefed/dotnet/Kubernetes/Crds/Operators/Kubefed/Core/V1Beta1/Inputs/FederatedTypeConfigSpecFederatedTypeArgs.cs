// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Core.V1Beta1
{

    /// <summary>
    /// Configuration for the federated type that defines (via template, placement and overrides fields) how the target type should appear in multiple cluster.
    /// </summary>
    public class FederatedTypeConfigSpecFederatedTypeArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Group of the resource.
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        /// <summary>
        /// Camel-cased singular name of the resource (e.g. ConfigMap)
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// Lower-cased plural name of the resource (e.g. configmaps).  If not provided, it will be computed by lower-casing the kind and suffixing an 's'.
        /// </summary>
        [Input("pluralName", required: true)]
        public Input<string> PluralName { get; set; } = null!;

        /// <summary>
        /// Scope of the resource.
        /// </summary>
        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        /// <summary>
        /// Version of the resource.
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public FederatedTypeConfigSpecFederatedTypeArgs()
        {
        }
    }
}
