// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Core.V1Beta1
{

    public class KubeFedConfigSpecLeaderElectArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The duration that non-leader candidates will wait after observing a leadership renewal until attempting to acquire leadership of a led but unrenewed leader slot. This is effectively the maximum duration that a leader can be stopped before it is replaced by another candidate. This is only applicable if leader election is enabled.
        /// </summary>
        [Input("leaseDuration")]
        public Input<string>? LeaseDuration { get; set; }

        /// <summary>
        /// The interval between attempts by the acting master to renew a leadership slot before it stops leading. This must be less than or equal to the lease duration. This is only applicable if leader election is enabled.
        /// </summary>
        [Input("renewDeadline")]
        public Input<string>? RenewDeadline { get; set; }

        /// <summary>
        /// The type of resource object that is used for locking during leader election. Supported options are `configmaps` (default) and `endpoints`.
        /// </summary>
        [Input("resourceLock")]
        public Input<string>? ResourceLock { get; set; }

        /// <summary>
        /// The duration the clients should wait between attempting acquisition and renewal of a leadership. This is only applicable if leader election is enabled.
        /// </summary>
        [Input("retryPeriod")]
        public Input<string>? RetryPeriod { get; set; }

        public KubeFedConfigSpecLeaderElectArgs()
        {
        }
    }
}
