// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Core.V1Beta1
{

    public class KubeFedConfigSpecArgs : Pulumi.ResourceArgs
    {
        [Input("clusterHealthCheck")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1Beta1.KubeFedConfigSpecClusterHealthCheckArgs>? ClusterHealthCheck { get; set; }

        [Input("controllerDuration")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1Beta1.KubeFedConfigSpecControllerDurationArgs>? ControllerDuration { get; set; }

        [Input("featureGates")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1Beta1.KubeFedConfigSpecFeatureGatesArgs>? _featureGates;
        public InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1Beta1.KubeFedConfigSpecFeatureGatesArgs> FeatureGates
        {
            get => _featureGates ?? (_featureGates = new InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1Beta1.KubeFedConfigSpecFeatureGatesArgs>());
            set => _featureGates = value;
        }

        [Input("leaderElect")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1Beta1.KubeFedConfigSpecLeaderElectArgs>? LeaderElect { get; set; }

        /// <summary>
        /// The scope of the KubeFed control plane should be either `Namespaced` or `Cluster`. `Namespaced` indicates that the KubeFed namespace will be the only target of the control plane.
        /// </summary>
        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        [Input("syncController")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1Beta1.KubeFedConfigSpecSyncControllerArgs>? SyncController { get; set; }

        public KubeFedConfigSpecArgs()
        {
        }
    }
}
