// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Multiclusterdns.V1Alpha1
{

    [OutputType]
    public sealed class ServiceDNSRecordSpec
    {
        /// <summary>
        /// AllowServiceWithoutEndpoints allows DNS records to be written for Service shards without endpoints
        /// </summary>
        public readonly bool AllowServiceWithoutEndpoints;
        /// <summary>
        /// DNSPrefix when specified, an additional DNS record would be created with &lt;DNSPrefix&gt;.&lt;KubeFedDomain&gt;
        /// </summary>
        public readonly string DnsPrefix;
        /// <summary>
        /// DomainRef is the name of the domain object to which the corresponding federated service belongs
        /// </summary>
        public readonly string DomainRef;
        /// <summary>
        /// ExternalName when specified, replaces the service name portion of a resource record with the value of ExternalName.
        /// </summary>
        public readonly string ExternalName;
        /// <summary>
        /// RecordTTL is the TTL in seconds for DNS records created for this Service, if omitted a default would be used
        /// </summary>
        public readonly int RecordTTL;

        [OutputConstructor]
        private ServiceDNSRecordSpec(
            bool allowServiceWithoutEndpoints,

            string dnsPrefix,

            string domainRef,

            string externalName,

            int recordTTL)
        {
            AllowServiceWithoutEndpoints = allowServiceWithoutEndpoints;
            DnsPrefix = dnsPrefix;
            DomainRef = domainRef;
            ExternalName = externalName;
            RecordTTL = recordTTL;
        }
    }
}
