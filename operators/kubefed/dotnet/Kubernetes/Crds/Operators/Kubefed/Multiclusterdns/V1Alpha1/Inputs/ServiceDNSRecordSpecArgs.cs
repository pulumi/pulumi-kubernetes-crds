// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Multiclusterdns.V1Alpha1
{

    public class ServiceDNSRecordSpecArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// AllowServiceWithoutEndpoints allows DNS records to be written for Service shards without endpoints
        /// </summary>
        [Input("allowServiceWithoutEndpoints")]
        public Input<bool>? AllowServiceWithoutEndpoints { get; set; }

        /// <summary>
        /// DNSPrefix when specified, an additional DNS record would be created with &lt;DNSPrefix&gt;.&lt;KubeFedDomain&gt;
        /// </summary>
        [Input("dnsPrefix")]
        public Input<string>? DnsPrefix { get; set; }

        /// <summary>
        /// DomainRef is the name of the domain object to which the corresponding federated service belongs
        /// </summary>
        [Input("domainRef", required: true)]
        public Input<string> DomainRef { get; set; } = null!;

        /// <summary>
        /// ExternalName when specified, replaces the service name portion of a resource record with the value of ExternalName.
        /// </summary>
        [Input("externalName")]
        public Input<string>? ExternalName { get; set; }

        /// <summary>
        /// RecordTTL is the TTL in seconds for DNS records created for this Service, if omitted a default would be used
        /// </summary>
        [Input("recordTTL")]
        public Input<int>? RecordTTL { get; set; }

        public ServiceDNSRecordSpecArgs()
        {
        }
    }
}
