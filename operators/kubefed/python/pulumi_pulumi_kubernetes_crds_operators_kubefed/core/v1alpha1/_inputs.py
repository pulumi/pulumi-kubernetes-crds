# coding=utf-8
# *** WARNING: this file was generated by crd2pulumi. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from ... import _utilities, _tables

__all__ = [
    'ClusterPropagatedVersionStatusArgs',
    'ClusterPropagatedVersionStatusClusterVersionsArgs',
    'FederatedServiceStatusClusterStatusArgs',
    'PropagatedVersionStatusArgs',
    'PropagatedVersionStatusClusterVersionsArgs',
]

@pulumi.input_type
class ClusterPropagatedVersionStatusArgs:
    def __init__(__self__, *,
                 overrides_version: pulumi.Input[str],
                 template_version: pulumi.Input[str],
                 cluster_versions: Optional[pulumi.Input[Sequence[pulumi.Input['ClusterPropagatedVersionStatusClusterVersionsArgs']]]] = None):
        """
        :param pulumi.Input[str] overrides_version: The observed version of the overrides for this resource.
        :param pulumi.Input[str] template_version: The observed version of the template for this resource.
        :param pulumi.Input[Sequence[pulumi.Input['ClusterPropagatedVersionStatusClusterVersionsArgs']]] cluster_versions: The last versions produced in each cluster for this resource.
        """
        pulumi.set(__self__, "overrides_version", overrides_version)
        pulumi.set(__self__, "template_version", template_version)
        if cluster_versions is not None:
            pulumi.set(__self__, "cluster_versions", cluster_versions)

    @property
    @pulumi.getter(name="overridesVersion")
    def overrides_version(self) -> pulumi.Input[str]:
        """
        The observed version of the overrides for this resource.
        """
        return pulumi.get(self, "overrides_version")

    @overrides_version.setter
    def overrides_version(self, value: pulumi.Input[str]):
        pulumi.set(self, "overrides_version", value)

    @property
    @pulumi.getter(name="templateVersion")
    def template_version(self) -> pulumi.Input[str]:
        """
        The observed version of the template for this resource.
        """
        return pulumi.get(self, "template_version")

    @template_version.setter
    def template_version(self, value: pulumi.Input[str]):
        pulumi.set(self, "template_version", value)

    @property
    @pulumi.getter(name="clusterVersions")
    def cluster_versions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ClusterPropagatedVersionStatusClusterVersionsArgs']]]]:
        """
        The last versions produced in each cluster for this resource.
        """
        return pulumi.get(self, "cluster_versions")

    @cluster_versions.setter
    def cluster_versions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ClusterPropagatedVersionStatusClusterVersionsArgs']]]]):
        pulumi.set(self, "cluster_versions", value)


@pulumi.input_type
class ClusterPropagatedVersionStatusClusterVersionsArgs:
    def __init__(__self__, *,
                 cluster_name: pulumi.Input[str],
                 version: pulumi.Input[str]):
        """
        :param pulumi.Input[str] cluster_name: The name of the cluster the version is for.
        :param pulumi.Input[str] version: The last version produced for the resource by a KubeFed operation.
        """
        pulumi.set(__self__, "cluster_name", cluster_name)
        pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="clusterName")
    def cluster_name(self) -> pulumi.Input[str]:
        """
        The name of the cluster the version is for.
        """
        return pulumi.get(self, "cluster_name")

    @cluster_name.setter
    def cluster_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "cluster_name", value)

    @property
    @pulumi.getter
    def version(self) -> pulumi.Input[str]:
        """
        The last version produced for the resource by a KubeFed operation.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: pulumi.Input[str]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class FederatedServiceStatusClusterStatusArgs:
    def __init__(__self__, *,
                 cluster_name: pulumi.Input[str],
                 status: pulumi.Input[Mapping[str, Any]]):
        pulumi.set(__self__, "cluster_name", cluster_name)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="clusterName")
    def cluster_name(self) -> pulumi.Input[str]:
        return pulumi.get(self, "cluster_name")

    @cluster_name.setter
    def cluster_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "cluster_name", value)

    @property
    @pulumi.getter
    def status(self) -> pulumi.Input[Mapping[str, Any]]:
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: pulumi.Input[Mapping[str, Any]]):
        pulumi.set(self, "status", value)


@pulumi.input_type
class PropagatedVersionStatusArgs:
    def __init__(__self__, *,
                 overrides_version: pulumi.Input[str],
                 template_version: pulumi.Input[str],
                 cluster_versions: Optional[pulumi.Input[Sequence[pulumi.Input['PropagatedVersionStatusClusterVersionsArgs']]]] = None):
        """
        :param pulumi.Input[str] overrides_version: The observed version of the overrides for this resource.
        :param pulumi.Input[str] template_version: The observed version of the template for this resource.
        :param pulumi.Input[Sequence[pulumi.Input['PropagatedVersionStatusClusterVersionsArgs']]] cluster_versions: The last versions produced in each cluster for this resource.
        """
        pulumi.set(__self__, "overrides_version", overrides_version)
        pulumi.set(__self__, "template_version", template_version)
        if cluster_versions is not None:
            pulumi.set(__self__, "cluster_versions", cluster_versions)

    @property
    @pulumi.getter(name="overridesVersion")
    def overrides_version(self) -> pulumi.Input[str]:
        """
        The observed version of the overrides for this resource.
        """
        return pulumi.get(self, "overrides_version")

    @overrides_version.setter
    def overrides_version(self, value: pulumi.Input[str]):
        pulumi.set(self, "overrides_version", value)

    @property
    @pulumi.getter(name="templateVersion")
    def template_version(self) -> pulumi.Input[str]:
        """
        The observed version of the template for this resource.
        """
        return pulumi.get(self, "template_version")

    @template_version.setter
    def template_version(self, value: pulumi.Input[str]):
        pulumi.set(self, "template_version", value)

    @property
    @pulumi.getter(name="clusterVersions")
    def cluster_versions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PropagatedVersionStatusClusterVersionsArgs']]]]:
        """
        The last versions produced in each cluster for this resource.
        """
        return pulumi.get(self, "cluster_versions")

    @cluster_versions.setter
    def cluster_versions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PropagatedVersionStatusClusterVersionsArgs']]]]):
        pulumi.set(self, "cluster_versions", value)


@pulumi.input_type
class PropagatedVersionStatusClusterVersionsArgs:
    def __init__(__self__, *,
                 cluster_name: pulumi.Input[str],
                 version: pulumi.Input[str]):
        """
        :param pulumi.Input[str] cluster_name: The name of the cluster the version is for.
        :param pulumi.Input[str] version: The last version produced for the resource by a KubeFed operation.
        """
        pulumi.set(__self__, "cluster_name", cluster_name)
        pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="clusterName")
    def cluster_name(self) -> pulumi.Input[str]:
        """
        The name of the cluster the version is for.
        """
        return pulumi.get(self, "cluster_name")

    @cluster_name.setter
    def cluster_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "cluster_name", value)

    @property
    @pulumi.getter
    def version(self) -> pulumi.Input[str]:
        """
        The last version produced for the resource by a KubeFed operation.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: pulumi.Input[str]):
        pulumi.set(self, "version", value)


