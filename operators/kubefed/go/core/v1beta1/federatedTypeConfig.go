// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type FederatedTypeConfig struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput             `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput             `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput         `pulumi:"metadata"`
	Spec       FederatedTypeConfigSpecOutput      `pulumi:"spec"`
	Status     FederatedTypeConfigStatusPtrOutput `pulumi:"status"`
}

// NewFederatedTypeConfig registers a new resource with the given unique name, arguments, and options.
func NewFederatedTypeConfig(ctx *pulumi.Context,
	name string, args *FederatedTypeConfigArgs, opts ...pulumi.ResourceOption) (*FederatedTypeConfig, error) {
	if args == nil {
		args = &FederatedTypeConfigArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("core.kubefed.io/v1beta1")
	args.Kind = pulumi.StringPtr("FederatedTypeConfig")
	var resource FederatedTypeConfig
	err := ctx.RegisterResource("kubernetes:core.kubefed.io/v1beta1:FederatedTypeConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFederatedTypeConfig gets an existing FederatedTypeConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFederatedTypeConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FederatedTypeConfigState, opts ...pulumi.ResourceOption) (*FederatedTypeConfig, error) {
	var resource FederatedTypeConfig
	err := ctx.ReadResource("kubernetes:core.kubefed.io/v1beta1:FederatedTypeConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FederatedTypeConfig resources.
type federatedTypeConfigState struct {
	ApiVersion *string                    `pulumi:"apiVersion"`
	Kind       *string                    `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta         `pulumi:"metadata"`
	Spec       *FederatedTypeConfigSpec   `pulumi:"spec"`
	Status     *FederatedTypeConfigStatus `pulumi:"status"`
}

type FederatedTypeConfigState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       FederatedTypeConfigSpecPtrInput
	Status     FederatedTypeConfigStatusPtrInput
}

func (FederatedTypeConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*federatedTypeConfigState)(nil)).Elem()
}

type federatedTypeConfigArgs struct {
	ApiVersion *string                    `pulumi:"apiVersion"`
	Kind       *string                    `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta         `pulumi:"metadata"`
	Spec       *FederatedTypeConfigSpec   `pulumi:"spec"`
	Status     *FederatedTypeConfigStatus `pulumi:"status"`
}

// The set of arguments for constructing a FederatedTypeConfig resource.
type FederatedTypeConfigArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       FederatedTypeConfigSpecPtrInput
	Status     FederatedTypeConfigStatusPtrInput
}

func (FederatedTypeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*federatedTypeConfigArgs)(nil)).Elem()
}
