// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type FederatedServiceStatus struct {
	pulumi.CustomResourceState

	ApiVersion    pulumi.StringPtrOutput                         `pulumi:"apiVersion"`
	ClusterStatus FederatedServiceStatusClusterStatusArrayOutput `pulumi:"clusterStatus"`
	Kind          pulumi.StringPtrOutput                         `pulumi:"kind"`
	Metadata      metav1.ObjectMetaPtrOutput                     `pulumi:"metadata"`
}

// NewFederatedServiceStatus registers a new resource with the given unique name, arguments, and options.
func NewFederatedServiceStatus(ctx *pulumi.Context,
	name string, args *FederatedServiceStatusArgs, opts ...pulumi.ResourceOption) (*FederatedServiceStatus, error) {
	if args == nil {
		args = &FederatedServiceStatusArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("core.kubefed.io/v1alpha1")
	args.Kind = pulumi.StringPtr("FederatedServiceStatus")
	var resource FederatedServiceStatus
	err := ctx.RegisterResource("kubernetes:core.kubefed.io/v1alpha1:FederatedServiceStatus", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFederatedServiceStatus gets an existing FederatedServiceStatus resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFederatedServiceStatus(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FederatedServiceStatusState, opts ...pulumi.ResourceOption) (*FederatedServiceStatus, error) {
	var resource FederatedServiceStatus
	err := ctx.ReadResource("kubernetes:core.kubefed.io/v1alpha1:FederatedServiceStatus", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FederatedServiceStatus resources.
type federatedServiceStatusState struct {
	ApiVersion    *string                               `pulumi:"apiVersion"`
	ClusterStatus []FederatedServiceStatusClusterStatus `pulumi:"clusterStatus"`
	Kind          *string                               `pulumi:"kind"`
	Metadata      *metav1.ObjectMeta                    `pulumi:"metadata"`
}

type FederatedServiceStatusState struct {
	ApiVersion    pulumi.StringPtrInput
	ClusterStatus FederatedServiceStatusClusterStatusArrayInput
	Kind          pulumi.StringPtrInput
	Metadata      metav1.ObjectMetaPtrInput
}

func (FederatedServiceStatusState) ElementType() reflect.Type {
	return reflect.TypeOf((*federatedServiceStatusState)(nil)).Elem()
}

type federatedServiceStatusArgs struct {
	ApiVersion    *string                               `pulumi:"apiVersion"`
	ClusterStatus []FederatedServiceStatusClusterStatus `pulumi:"clusterStatus"`
	Kind          *string                               `pulumi:"kind"`
	Metadata      *metav1.ObjectMeta                    `pulumi:"metadata"`
}

// The set of arguments for constructing a FederatedServiceStatus resource.
type FederatedServiceStatusArgs struct {
	ApiVersion    pulumi.StringPtrInput
	ClusterStatus FederatedServiceStatusClusterStatusArrayInput
	Kind          pulumi.StringPtrInput
	Metadata      metav1.ObjectMetaPtrInput
}

func (FederatedServiceStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*federatedServiceStatusArgs)(nil)).Elem()
}
