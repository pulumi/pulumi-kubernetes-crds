// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Hyperfoil.V1Alpha1
{

    [OutputType]
    public sealed class HorreumSpecKeycloak
    {
        /// <summary>
        /// Secret used for admin access to the deployed Keycloak instance. Created if does not exist. Must contain keys `username` and `password`.
        /// </summary>
        public readonly string AdminSecret;
        /// <summary>
        /// Database coordinates Keycloak should use
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Hyperfoil.V1Alpha1.HorreumSpecKeycloakDatabase Database;
        /// <summary>
        /// Set to true if the Keycloak instance should not be deployed
        /// </summary>
        public readonly bool External;
        /// <summary>
        /// Image that should be used for Keycloak deployment. Defaults to docker.io/jboss/keycloak:latest
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// Route to be used for external access to the Keycloak instance. When `external` is set to true, this will be used for internal access as well.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Hyperfoil.V1Alpha1.HorreumSpecKeycloakRoute Route;

        [OutputConstructor]
        private HorreumSpecKeycloak(
            string adminSecret,

            Pulumi.Kubernetes.Types.Outputs.Hyperfoil.V1Alpha1.HorreumSpecKeycloakDatabase database,

            bool external,

            string image,

            Pulumi.Kubernetes.Types.Outputs.Hyperfoil.V1Alpha1.HorreumSpecKeycloakRoute route)
        {
            AdminSecret = adminSecret;
            Database = database;
            External = external;
            Image = image;
            Route = route;
        }
    }
}
