// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Hyperfoil.V1Alpha1
{

    /// <summary>
    /// PostgreSQL specification
    /// </summary>
    public class HorreumSpecPostgresArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Secret used for unrestricted access to the database. Created if does not exist. Must contain keys `username` and `password`.
        /// </summary>
        [Input("adminSecret")]
        public Input<string>? AdminSecret { get; set; }

        /// <summary>
        /// Hostname of the external database. If empty, database will be deployed by this operator.
        /// </summary>
        [Input("externalHost")]
        public Input<string>? ExternalHost { get; set; }

        /// <summary>
        /// Port of the external database. Defaults to 5432.
        /// </summary>
        [Input("externalPort")]
        public Input<int>? ExternalPort { get; set; }

        /// <summary>
        /// Image used for PostgreSQL deployment. Defaults to docker.io/postgres:12
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Name of PVC where the database will store the data. If empty, ephemeral storage will be used.
        /// </summary>
        [Input("persistentVolumeClaim")]
        public Input<string>? PersistentVolumeClaim { get; set; }

        public HorreumSpecPostgresArgs()
        {
        }
    }
}
