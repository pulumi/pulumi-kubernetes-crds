// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Horreum is the object configuring Horreum performance results repository
type Horreum struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// HorreumSpec defines the desired state of Horreum
	Spec HorreumSpecPtrOutput `pulumi:"spec"`
	// HorreumStatus defines the observed state of Horreum
	Status HorreumStatusPtrOutput `pulumi:"status"`
}

// NewHorreum registers a new resource with the given unique name, arguments, and options.
func NewHorreum(ctx *pulumi.Context,
	name string, args *HorreumArgs, opts ...pulumi.ResourceOption) (*Horreum, error) {
	if args == nil {
		args = &HorreumArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("hyperfoil.io/v1alpha1")
	args.Kind = pulumi.StringPtr("Horreum")
	var resource Horreum
	err := ctx.RegisterResource("kubernetes:hyperfoil.io/v1alpha1:Horreum", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHorreum gets an existing Horreum resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHorreum(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HorreumState, opts ...pulumi.ResourceOption) (*Horreum, error) {
	var resource Horreum
	err := ctx.ReadResource("kubernetes:hyperfoil.io/v1alpha1:Horreum", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Horreum resources.
type horreumState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// HorreumSpec defines the desired state of Horreum
	Spec *HorreumSpec `pulumi:"spec"`
	// HorreumStatus defines the observed state of Horreum
	Status *HorreumStatus `pulumi:"status"`
}

type HorreumState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// HorreumSpec defines the desired state of Horreum
	Spec HorreumSpecPtrInput
	// HorreumStatus defines the observed state of Horreum
	Status HorreumStatusPtrInput
}

func (HorreumState) ElementType() reflect.Type {
	return reflect.TypeOf((*horreumState)(nil)).Elem()
}

type horreumArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// HorreumSpec defines the desired state of Horreum
	Spec *HorreumSpec `pulumi:"spec"`
	// HorreumStatus defines the observed state of Horreum
	Status *HorreumStatus `pulumi:"status"`
}

// The set of arguments for constructing a Horreum resource.
type HorreumArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// HorreumSpec defines the desired state of Horreum
	Spec HorreumSpecPtrInput
	// HorreumStatus defines the observed state of Horreum
	Status HorreumStatusPtrInput
}

func (HorreumArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*horreumArgs)(nil)).Elem()
}
