// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1
{

    [OutputType]
    public sealed class KafkaSpecKafkaListenersExternal
    {
        /// <summary>
        /// Authentication configuration for Kafka brokers.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaListenersExternalAuthentication Authentication;
        /// <summary>
        /// Configures the `Ingress` class that defines which `Ingress` controller will be used. If not set, the `Ingress` class is set to `nginx`.
        /// </summary>
        public readonly string Class;
        /// <summary>
        /// External listener configuration.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaListenersExternalConfiguration Configuration;
        /// <summary>
        /// List of peers which should be able to connect to this listener. Peers in this list are combined using a logical OR operation. If this field is empty or missing, all connections will be allowed for this listener. If this field is present and contains at least one item, the listener only allows the traffic which matches at least one item in this list.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaListenersExternalNetworkPolicyPeers> NetworkPolicyPeers;
        /// <summary>
        /// Overrides for external bootstrap and broker services and externally advertised addresses.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaListenersExternalOverrides Overrides;
        /// <summary>
        /// Enables TLS encryption on the listener. By default set to `true` for enabled TLS encryption.
        /// </summary>
        public readonly bool Tls;
        /// <summary>
        /// Type of the external listener. Currently the supported types are `route`, `loadbalancer`, and `nodeport`. 
        /// 
        /// * `route` type uses OpenShift Routes to expose Kafka.* `loadbalancer` type uses LoadBalancer type services to expose Kafka.* `nodeport` type uses NodePort type services to expose Kafka..
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private KafkaSpecKafkaListenersExternal(
            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaListenersExternalAuthentication authentication,

            string @class,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaListenersExternalConfiguration configuration,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaListenersExternalNetworkPolicyPeers> networkPolicyPeers,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaListenersExternalOverrides overrides,

            bool tls,

            string type)
        {
            Authentication = authentication;
            Class = @class;
            Configuration = configuration;
            NetworkPolicyPeers = networkPolicyPeers;
            Overrides = overrides;
            Tls = tls;
            Type = type;
        }
    }
}
