// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1
{

    [OutputType]
    public sealed class KafkaUserSpecAuthorizationAcls
    {
        /// <summary>
        /// The host from which the action described in the ACL rule is allowed or denied.
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// Operation which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.
        /// </summary>
        public readonly string Operation;
        /// <summary>
        /// Indicates the resource for which given ACL rule applies.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaUserSpecAuthorizationAclsResource Resource;
        /// <summary>
        /// The type of the rule. Currently the only supported type is `allow`. ACL rules with type `allow` are used to allow user to execute the specified operations. Default value is `allow`.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private KafkaUserSpecAuthorizationAcls(
            string host,

            string operation,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaUserSpecAuthorizationAclsResource resource,

            string type)
        {
            Host = host;
            Operation = operation;
            Resource = resource;
            Type = type;
        }
    }
}
