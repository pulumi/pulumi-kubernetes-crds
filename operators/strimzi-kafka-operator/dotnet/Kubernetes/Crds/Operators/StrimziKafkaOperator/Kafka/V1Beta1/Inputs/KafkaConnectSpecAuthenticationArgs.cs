// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1
{

    /// <summary>
    /// Authentication configuration for Kafka Connect.
    /// </summary>
    public class KafkaConnectSpecAuthenticationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Link to Kubernetes Secret containing the access token which was obtained from the authorization server.
        /// </summary>
        [Input("accessToken")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaConnectSpecAuthenticationAccessTokenArgs>? AccessToken { get; set; }

        /// <summary>
        /// Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.
        /// </summary>
        [Input("accessTokenIsJwt")]
        public Input<bool>? AccessTokenIsJwt { get; set; }

        /// <summary>
        /// Reference to the `Secret` which holds the certificate and private key pair.
        /// </summary>
        [Input("certificateAndKey")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaConnectSpecAuthenticationCertificateAndKeyArgs>? CertificateAndKey { get; set; }

        /// <summary>
        /// OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
        /// </summary>
        [Input("clientSecret")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaConnectSpecAuthenticationClientSecretArgs>? ClientSecret { get; set; }

        /// <summary>
        /// Enable or disable TLS hostname verification. Default value is `false`.
        /// </summary>
        [Input("disableTlsHostnameVerification")]
        public Input<bool>? DisableTlsHostnameVerification { get; set; }

        /// <summary>
        /// Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.
        /// </summary>
        [Input("maxTokenExpirySeconds")]
        public Input<int>? MaxTokenExpirySeconds { get; set; }

        /// <summary>
        /// Reference to the `Secret` which holds the password.
        /// </summary>
        [Input("passwordSecret")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaConnectSpecAuthenticationPasswordSecretArgs>? PasswordSecret { get; set; }

        /// <summary>
        /// Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.
        /// </summary>
        [Input("refreshToken")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaConnectSpecAuthenticationRefreshTokenArgs>? RefreshToken { get; set; }

        /// <summary>
        /// OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        [Input("tlsTrustedCertificates")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaConnectSpecAuthenticationTlsTrustedCertificatesArgs>? _tlsTrustedCertificates;

        /// <summary>
        /// Trusted certificates for TLS connection to the OAuth server.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaConnectSpecAuthenticationTlsTrustedCertificatesArgs> TlsTrustedCertificates
        {
            get => _tlsTrustedCertificates ?? (_tlsTrustedCertificates = new InputList<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaConnectSpecAuthenticationTlsTrustedCertificatesArgs>());
            set => _tlsTrustedCertificates = value;
        }

        /// <summary>
        /// Authorization server token endpoint URI.
        /// </summary>
        [Input("tokenEndpointUri")]
        public Input<string>? TokenEndpointUri { get; set; }

        /// <summary>
        /// Authentication type. Currently the only supported types are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Username used for the authentication.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public KafkaConnectSpecAuthenticationArgs()
        {
        }
    }
}
