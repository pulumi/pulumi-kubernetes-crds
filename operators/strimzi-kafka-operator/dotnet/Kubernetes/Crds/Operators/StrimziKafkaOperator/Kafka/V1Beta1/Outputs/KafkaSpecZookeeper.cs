// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1
{

    [OutputType]
    public sealed class KafkaSpecZookeeper
    {
        /// <summary>
        /// The pod's affinity rules.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperAffinity Affinity;
        /// <summary>
        /// The ZooKeeper broker config. Properties with the following prefixes cannot be set: server., dataDir, dataLogDir, clientPort, authProvider, quorum.auth, requireClientAuthScheme, snapshot.trust.empty, standaloneEnabled, reconfigEnabled, 4lw.commands.whitelist, secureClientPort, ssl., serverCnxnFactory, sslQuorum (with the exception of: ssl.protocol, ssl.quorum.protocol, ssl.enabledProtocols, ssl.quorum.enabledProtocols, ssl.ciphersuites, ssl.quorum.ciphersuites, ssl.hostnameVerification, ssl.quorum.hostnameVerification).
        /// </summary>
        public readonly ImmutableDictionary<string, object> Config;
        /// <summary>
        /// The docker image for the pods.
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// JVM Options for pods.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperJvmOptions JvmOptions;
        /// <summary>
        /// Pod liveness checking.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperLivenessProbe LivenessProbe;
        /// <summary>
        /// Logging configuration for ZooKeeper.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperLogging Logging;
        /// <summary>
        /// The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter for details of the structure of this configuration.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Metrics;
        /// <summary>
        /// Pod readiness checking.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperReadinessProbe ReadinessProbe;
        /// <summary>
        /// The number of pods in the cluster.
        /// </summary>
        public readonly int Replicas;
        /// <summary>
        /// CPU and memory resources to reserve.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperResources Resources;
        /// <summary>
        /// Storage configuration (disk). Cannot be updated.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperStorage Storage;
        /// <summary>
        /// Template for ZooKeeper cluster resources. The template allows users to specify how are the `StatefulSet`, `Pods` and `Services` generated.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplate Template;
        /// <summary>
        /// TLS sidecar configuration. The TLS sidecar is not used anymore and this option will be ignored.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTlsSidecar TlsSidecar;
        /// <summary>
        /// The pod's tolerations.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTolerations> Tolerations;

        [OutputConstructor]
        private KafkaSpecZookeeper(
            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperAffinity affinity,

            ImmutableDictionary<string, object> config,

            string image,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperJvmOptions jvmOptions,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperLivenessProbe livenessProbe,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperLogging logging,

            ImmutableDictionary<string, object> metrics,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperReadinessProbe readinessProbe,

            int replicas,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperResources resources,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperStorage storage,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplate template,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTlsSidecar tlsSidecar,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTolerations> tolerations)
        {
            Affinity = affinity;
            Config = config;
            Image = image;
            JvmOptions = jvmOptions;
            LivenessProbe = livenessProbe;
            Logging = logging;
            Metrics = metrics;
            ReadinessProbe = readinessProbe;
            Replicas = replicas;
            Resources = resources;
            Storage = storage;
            Template = template;
            TlsSidecar = tlsSidecar;
            Tolerations = tolerations;
        }
    }
}
