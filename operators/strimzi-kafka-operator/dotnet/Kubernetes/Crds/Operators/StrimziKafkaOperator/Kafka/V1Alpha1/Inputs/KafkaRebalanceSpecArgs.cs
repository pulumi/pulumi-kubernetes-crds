// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Kafka.V1Alpha1
{

    /// <summary>
    /// The specification of the Kafka rebalance.
    /// </summary>
    public class KafkaRebalanceSpecArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The upper bound of ongoing partition replica movements between disks within each broker. Default is 2.
        /// </summary>
        [Input("concurrentIntraBrokerPartitionMovements")]
        public Input<int>? ConcurrentIntraBrokerPartitionMovements { get; set; }

        /// <summary>
        /// The upper bound of ongoing partition leadership movements. Default is 1000.
        /// </summary>
        [Input("concurrentLeaderMovements")]
        public Input<int>? ConcurrentLeaderMovements { get; set; }

        /// <summary>
        /// The upper bound of ongoing partition replica movements going into/out of each broker. Default is 5.
        /// </summary>
        [Input("concurrentPartitionMovementsPerBroker")]
        public Input<int>? ConcurrentPartitionMovementsPerBroker { get; set; }

        /// <summary>
        /// A regular expression where any matching topics will be excluded from the calculation of optimization proposals. This expression will be parsed by the java.util.regex.Pattern class; for more information on the supported formar consult the documentation for that class.
        /// </summary>
        [Input("excludedTopics")]
        public Input<string>? ExcludedTopics { get; set; }

        [Input("goals")]
        private InputList<string>? _goals;

        /// <summary>
        /// A list of goals, ordered by decreasing priority, to use for generating and executing the rebalance proposal. The supported goals are available at https://github.com/linkedin/cruise-control#goals. If an empty goals list is provided, the goals declared in the default.goals Cruise Control configuration parameter are used.
        /// </summary>
        public InputList<string> Goals
        {
            get => _goals ?? (_goals = new InputList<string>());
            set => _goals = value;
        }

        /// <summary>
        /// The upper bound, in bytes per second, on the bandwidth used to move replicas. There is no limit by default.
        /// </summary>
        [Input("replicationThrottle")]
        public Input<int>? ReplicationThrottle { get; set; }

        /// <summary>
        /// Whether to allow the hard goals specified in the Kafka CR to be skipped in optimization proposal generation. This can be useful when some of those hard goals are preventing a balance solution being found. Default is false.
        /// </summary>
        [Input("skipHardGoalCheck")]
        public Input<bool>? SkipHardGoalCheck { get; set; }

        public KafkaRebalanceSpecArgs()
        {
        }
    }
}
