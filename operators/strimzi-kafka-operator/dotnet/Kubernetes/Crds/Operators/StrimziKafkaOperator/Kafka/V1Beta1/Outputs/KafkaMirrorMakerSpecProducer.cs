// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1
{

    [OutputType]
    public sealed class KafkaMirrorMakerSpecProducer
    {
        /// <summary>
        /// Flag to set the MirrorMaker to exit on a failed send. Default value is `true`.
        /// </summary>
        public readonly bool AbortOnSendFailure;
        /// <summary>
        /// Authentication configuration for connecting to the cluster.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaMirrorMakerSpecProducerAuthentication Authentication;
        /// <summary>
        /// A list of host:port pairs for establishing the initial connection to the Kafka cluster.
        /// </summary>
        public readonly string BootstrapServers;
        /// <summary>
        /// The MirrorMaker producer config. Properties with the following prefixes cannot be set: ssl., bootstrap.servers, sasl., security., interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).
        /// </summary>
        public readonly ImmutableDictionary<string, object> Config;
        /// <summary>
        /// TLS configuration for connecting MirrorMaker to the cluster.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaMirrorMakerSpecProducerTls Tls;

        [OutputConstructor]
        private KafkaMirrorMakerSpecProducer(
            bool abortOnSendFailure,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaMirrorMakerSpecProducerAuthentication authentication,

            string bootstrapServers,

            ImmutableDictionary<string, object> config,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaMirrorMakerSpecProducerTls tls)
        {
            AbortOnSendFailure = abortOnSendFailure;
            Authentication = authentication;
            BootstrapServers = bootstrapServers;
            Config = config;
            Tls = tls;
        }
    }
}
