// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1
{

    [OutputType]
    public sealed class KafkaMirrorMaker2Spec
    {
        /// <summary>
        /// The pod's affinity rules.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecAffinity Affinity;
        /// <summary>
        /// Kafka clusters for mirroring.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecClusters> Clusters;
        /// <summary>
        /// The cluster alias used for Kafka Connect. The alias must match a cluster in the list at `spec.clusters`.
        /// </summary>
        public readonly string ConnectCluster;
        /// <summary>
        /// Pass data from Secrets or ConfigMaps to the Kafka Connect pods and use them to configure connectors.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecExternalConfiguration ExternalConfiguration;
        /// <summary>
        /// The docker image for the pods.
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// JVM Options for pods.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecJvmOptions JvmOptions;
        /// <summary>
        /// Pod liveness checking.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecLivenessProbe LivenessProbe;
        /// <summary>
        /// Logging configuration for Kafka Connect.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecLogging Logging;
        /// <summary>
        /// The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter for details of the structure of this configuration.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Metrics;
        /// <summary>
        /// Configuration of the MirrorMaker 2.0 connectors.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecMirrors> Mirrors;
        /// <summary>
        /// Pod readiness checking.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecReadinessProbe ReadinessProbe;
        /// <summary>
        /// The number of pods in the Kafka Connect group.
        /// </summary>
        public readonly int Replicas;
        /// <summary>
        /// The maximum limits for CPU and memory resources and the requested initial resources.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecResources Resources;
        /// <summary>
        /// Template for Kafka Connect and Kafka Connect S2I resources. The template allows users to specify how the `Deployment`, `Pods` and `Service` are generated.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecTemplate Template;
        /// <summary>
        /// The pod's tolerations.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecTolerations> Tolerations;
        /// <summary>
        /// The configuration of tracing in Kafka Connect.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecTracing Tracing;
        /// <summary>
        /// The Kafka Connect version. Defaults to {DefaultKafkaVersion}. Consult the user documentation to understand the process required to upgrade or downgrade the version.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private KafkaMirrorMaker2Spec(
            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecAffinity affinity,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecClusters> clusters,

            string connectCluster,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecExternalConfiguration externalConfiguration,

            string image,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecJvmOptions jvmOptions,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecLivenessProbe livenessProbe,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecLogging logging,

            ImmutableDictionary<string, object> metrics,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecMirrors> mirrors,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecReadinessProbe readinessProbe,

            int replicas,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecResources resources,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecTemplate template,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecTolerations> tolerations,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Alpha1.KafkaMirrorMaker2SpecTracing tracing,

            string version)
        {
            Affinity = affinity;
            Clusters = clusters;
            ConnectCluster = connectCluster;
            ExternalConfiguration = externalConfiguration;
            Image = image;
            JvmOptions = jvmOptions;
            LivenessProbe = livenessProbe;
            Logging = logging;
            Metrics = metrics;
            Mirrors = mirrors;
            ReadinessProbe = readinessProbe;
            Replicas = replicas;
            Resources = resources;
            Template = template;
            Tolerations = tolerations;
            Tracing = tracing;
            Version = version;
        }
    }
}
