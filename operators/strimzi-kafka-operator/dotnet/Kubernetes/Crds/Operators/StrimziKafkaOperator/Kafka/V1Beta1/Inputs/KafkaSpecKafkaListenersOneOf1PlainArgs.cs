// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1
{

    /// <summary>
    /// Configures plain listener on port 9092.
    /// </summary>
    public class KafkaSpecKafkaListenersOneOf1PlainArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Authentication configuration for this listener. Since this listener does not use TLS transport you cannot configure an authentication with `type: tls`.
        /// </summary>
        [Input("authentication")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaListenersOneOf1PlainAuthenticationArgs>? Authentication { get; set; }

        [Input("networkPolicyPeers")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaListenersOneOf1PlainNetworkPolicyPeersArgs>? _networkPolicyPeers;

        /// <summary>
        /// List of peers which should be able to connect to this listener. Peers in this list are combined using a logical OR operation. If this field is empty or missing, all connections will be allowed for this listener. If this field is present and contains at least one item, the listener only allows the traffic which matches at least one item in this list.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaListenersOneOf1PlainNetworkPolicyPeersArgs> NetworkPolicyPeers
        {
            get => _networkPolicyPeers ?? (_networkPolicyPeers = new InputList<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaListenersOneOf1PlainNetworkPolicyPeersArgs>());
            set => _networkPolicyPeers = value;
        }

        public KafkaSpecKafkaListenersOneOf1PlainArgs()
        {
        }
    }
}
