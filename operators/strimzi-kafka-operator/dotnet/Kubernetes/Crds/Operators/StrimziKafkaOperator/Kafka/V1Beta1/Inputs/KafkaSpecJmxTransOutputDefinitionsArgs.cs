// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1
{

    public class KafkaSpecJmxTransOutputDefinitionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// How many seconds the JmxTrans waits before pushing a new set of data out.
        /// </summary>
        [Input("flushDelayInSeconds")]
        public Input<int>? FlushDelayInSeconds { get; set; }

        /// <summary>
        /// The DNS/hostname of the remote host that the data is pushed to.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// Template for setting the name of the output definition. This is used to identify where to send the results of queries should be sent.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Template for setting the format of the data that will be pushed.For more information see https://github.com/jmxtrans/jmxtrans/wiki/OutputWriters[JmxTrans OutputWriters].
        /// </summary>
        [Input("outputType", required: true)]
        public Input<string> OutputType { get; set; } = null!;

        /// <summary>
        /// The port of the remote host that the data is pushed to.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("typeNames")]
        private InputList<string>? _typeNames;

        /// <summary>
        /// Template for filtering data to be included in response to a wildcard query. For more information see https://github.com/jmxtrans/jmxtrans/wiki/Queries[JmxTrans queries].
        /// </summary>
        public InputList<string> TypeNames
        {
            get => _typeNames ?? (_typeNames = new InputList<string>());
            set => _typeNames = value;
        }

        public KafkaSpecJmxTransOutputDefinitionsArgs()
        {
        }
    }
}
