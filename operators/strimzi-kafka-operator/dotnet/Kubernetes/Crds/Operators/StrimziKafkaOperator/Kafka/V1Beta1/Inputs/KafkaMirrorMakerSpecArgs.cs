// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1
{

    /// <summary>
    /// The specification of Kafka MirrorMaker.
    /// </summary>
    public class KafkaMirrorMakerSpecArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The pod's affinity rules.
        /// </summary>
        [Input("affinity")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaMirrorMakerSpecAffinityArgs>? Affinity { get; set; }

        /// <summary>
        /// Configuration of source cluster.
        /// </summary>
        [Input("consumer", required: true)]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaMirrorMakerSpecConsumerArgs> Consumer { get; set; } = null!;

        /// <summary>
        /// The docker image for the pods.
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// JVM Options for pods.
        /// </summary>
        [Input("jvmOptions")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaMirrorMakerSpecJvmOptionsArgs>? JvmOptions { get; set; }

        /// <summary>
        /// Pod liveness checking.
        /// </summary>
        [Input("livenessProbe")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaMirrorMakerSpecLivenessProbeArgs>? LivenessProbe { get; set; }

        /// <summary>
        /// Logging configuration for MirrorMaker.
        /// </summary>
        [Input("logging")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaMirrorMakerSpecLoggingArgs>? Logging { get; set; }

        [Input("metrics")]
        private InputMap<object>? _metrics;

        /// <summary>
        /// The Prometheus JMX Exporter configuration. See {JMXExporter} for details of the structure of this configuration.
        /// </summary>
        public InputMap<object> Metrics
        {
            get => _metrics ?? (_metrics = new InputMap<object>());
            set => _metrics = value;
        }

        /// <summary>
        /// Configuration of target cluster.
        /// </summary>
        [Input("producer", required: true)]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaMirrorMakerSpecProducerArgs> Producer { get; set; } = null!;

        /// <summary>
        /// Pod readiness checking.
        /// </summary>
        [Input("readinessProbe")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaMirrorMakerSpecReadinessProbeArgs>? ReadinessProbe { get; set; }

        /// <summary>
        /// The number of pods in the `Deployment`.
        /// </summary>
        [Input("replicas", required: true)]
        public Input<int> Replicas { get; set; } = null!;

        /// <summary>
        /// CPU and memory resources to reserve.
        /// </summary>
        [Input("resources")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaMirrorMakerSpecResourcesArgs>? Resources { get; set; }

        /// <summary>
        /// Template to specify how Kafka MirrorMaker resources, `Deployments` and `Pods`, are generated.
        /// </summary>
        [Input("template")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaMirrorMakerSpecTemplateArgs>? Template { get; set; }

        [Input("tolerations")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaMirrorMakerSpecTolerationsArgs>? _tolerations;

        /// <summary>
        /// The pod's tolerations.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaMirrorMakerSpecTolerationsArgs> Tolerations
        {
            get => _tolerations ?? (_tolerations = new InputList<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaMirrorMakerSpecTolerationsArgs>());
            set => _tolerations = value;
        }

        /// <summary>
        /// The configuration of tracing in Kafka MirrorMaker.
        /// </summary>
        [Input("tracing")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaMirrorMakerSpecTracingArgs>? Tracing { get; set; }

        /// <summary>
        /// The Kafka MirrorMaker version. Defaults to {DefaultKafkaVersion}. Consult the documentation to understand the process required to upgrade or downgrade the version.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        /// <summary>
        /// List of topics which are included for mirroring. This option allows any regular expression using Java-style regular expressions. Mirroring two topics named A and B is achieved by using the whitelist `'A\|B'`. Or, as a special case, you can mirror all topics using the whitelist '*'. You can also specify multiple regular expressions separated by commas.
        /// </summary>
        [Input("whitelist", required: true)]
        public Input<string> Whitelist { get; set; } = null!;

        public KafkaMirrorMakerSpecArgs()
        {
        }
    }
}
