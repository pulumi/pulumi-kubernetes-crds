// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1
{

    [OutputType]
    public sealed class KafkaSpecZookeeperTemplate
    {
        /// <summary>
        /// Template for ZooKeeper client `Service`.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplateClientService ClientService;
        /// <summary>
        /// Template for ZooKeeper nodes `Service`.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplateNodesService NodesService;
        /// <summary>
        /// Template for all ZooKeeper `PersistentVolumeClaims`.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplatePersistentVolumeClaim PersistentVolumeClaim;
        /// <summary>
        /// Template for ZooKeeper `Pods`.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplatePod Pod;
        /// <summary>
        /// Template for ZooKeeper `PodDisruptionBudget`.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplatePodDisruptionBudget PodDisruptionBudget;
        /// <summary>
        /// Template for ZooKeeper `StatefulSet`.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplateStatefulset Statefulset;
        /// <summary>
        /// Template for the Zookeeper server TLS sidecar container. The TLS sidecar is not used anymore and this option will be ignored.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplateTlsSidecarContainer TlsSidecarContainer;
        /// <summary>
        /// Template for the ZooKeeper container.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplateZookeeperContainer ZookeeperContainer;

        [OutputConstructor]
        private KafkaSpecZookeeperTemplate(
            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplateClientService clientService,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplateNodesService nodesService,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplatePersistentVolumeClaim persistentVolumeClaim,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplatePod pod,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplatePodDisruptionBudget podDisruptionBudget,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplateStatefulset statefulset,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplateTlsSidecarContainer tlsSidecarContainer,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecZookeeperTemplateZookeeperContainer zookeeperContainer)
        {
            ClientService = clientService;
            NodesService = nodesService;
            PersistentVolumeClaim = persistentVolumeClaim;
            Pod = pod;
            PodDisruptionBudget = podDisruptionBudget;
            Statefulset = statefulset;
            TlsSidecarContainer = tlsSidecarContainer;
            ZookeeperContainer = zookeeperContainer;
        }
    }
}
