// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1
{

    /// <summary>
    /// Configuration of the Kafka cluster.
    /// </summary>
    public class KafkaSpecKafkaArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The pod's affinity rules.
        /// </summary>
        [Input("affinity")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaAffinityArgs>? Affinity { get; set; }

        /// <summary>
        /// Authorization configuration for Kafka brokers.
        /// </summary>
        [Input("authorization")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaAuthorizationArgs>? Authorization { get; set; }

        /// <summary>
        /// The image of the init container used for initializing the `broker.rack`.
        /// </summary>
        [Input("brokerRackInitImage")]
        public Input<string>? BrokerRackInitImage { get; set; }

        [Input("config")]
        private InputMap<object>? _config;

        /// <summary>
        /// Kafka broker config properties with the following prefixes cannot be set: listeners, advertised., broker., listener., host.name, port, inter.broker.listener.name, sasl., ssl., security., password., principal.builder.class, log.dir, zookeeper.connect, zookeeper.set.acl, zookeeper.ssl, zookeeper.clientCnxnSocket, authorizer., super.user, cruise.control.metrics.topic, cruise.control.metrics.reporter.bootstrap.servers (with the exception of: zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols,cruise.control.metrics.topic.num.partitions, cruise.control.metrics.topic.replication.factor, cruise.control.metrics.topic.retention.ms,cruise.control.metrics.topic.auto.create.retries, cruise.control.metrics.topic.auto.create.timeout.ms).
        /// </summary>
        public InputMap<object> Config
        {
            get => _config ?? (_config = new InputMap<object>());
            set => _config = value;
        }

        /// <summary>
        /// The docker image for the pods. The default value depends on the configured `Kafka.spec.kafka.version`.
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// JMX Options for Kafka brokers.
        /// </summary>
        [Input("jmxOptions")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaJmxOptionsArgs>? JmxOptions { get; set; }

        /// <summary>
        /// JVM Options for pods.
        /// </summary>
        [Input("jvmOptions")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaJvmOptionsArgs>? JvmOptions { get; set; }

        [Input("listeners", required: true)]
        public InputUnion<ImmutableArray<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaListenersOneOf0Args>, Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaListenersOneOf1Args> Listeners { get; set; } = null!;

        /// <summary>
        /// Pod liveness checking.
        /// </summary>
        [Input("livenessProbe")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaLivenessProbeArgs>? LivenessProbe { get; set; }

        /// <summary>
        /// Logging configuration for Kafka.
        /// </summary>
        [Input("logging")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaLoggingArgs>? Logging { get; set; }

        [Input("metrics")]
        private InputMap<object>? _metrics;

        /// <summary>
        /// The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter for details of the structure of this configuration.
        /// </summary>
        public InputMap<object> Metrics
        {
            get => _metrics ?? (_metrics = new InputMap<object>());
            set => _metrics = value;
        }

        /// <summary>
        /// Configuration of the `broker.rack` broker config.
        /// </summary>
        [Input("rack")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaRackArgs>? Rack { get; set; }

        /// <summary>
        /// Pod readiness checking.
        /// </summary>
        [Input("readinessProbe")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaReadinessProbeArgs>? ReadinessProbe { get; set; }

        /// <summary>
        /// The number of pods in the cluster.
        /// </summary>
        [Input("replicas", required: true)]
        public Input<int> Replicas { get; set; } = null!;

        /// <summary>
        /// CPU and memory resources to reserve.
        /// </summary>
        [Input("resources")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaResourcesArgs>? Resources { get; set; }

        /// <summary>
        /// Storage configuration (disk). Cannot be updated.
        /// </summary>
        [Input("storage", required: true)]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaStorageArgs> Storage { get; set; } = null!;

        /// <summary>
        /// Template for Kafka cluster resources. The template allows users to specify how are the `StatefulSet`, `Pods` and `Services` generated.
        /// </summary>
        [Input("template")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaTemplateArgs>? Template { get; set; }

        /// <summary>
        /// TLS sidecar configuration.
        /// </summary>
        [Input("tlsSidecar")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaTlsSidecarArgs>? TlsSidecar { get; set; }

        [Input("tolerations")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaTolerationsArgs>? _tolerations;

        /// <summary>
        /// The pod's tolerations.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaTolerationsArgs> Tolerations
        {
            get => _tolerations ?? (_tolerations = new InputList<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Beta1.KafkaSpecKafkaTolerationsArgs>());
            set => _tolerations = value;
        }

        /// <summary>
        /// The kafka broker version. Defaults to {DefaultKafkaVersion}. Consult the user documentation to understand the process required to upgrade or downgrade the version.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public KafkaSpecKafkaArgs()
        {
        }
    }
}
