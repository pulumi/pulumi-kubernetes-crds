// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Kafka.V1Alpha1
{

    /// <summary>
    /// The status of the Kafka rebalance.
    /// </summary>
    public class KafkaRebalanceStatusArgs : Pulumi.ResourceArgs
    {
        [Input("conditions")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Alpha1.KafkaRebalanceStatusConditionsArgs>? _conditions;

        /// <summary>
        /// List of status conditions.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Alpha1.KafkaRebalanceStatusConditionsArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Pulumi.Kubernetes.Types.Inputs.Kafka.V1Alpha1.KafkaRebalanceStatusConditionsArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// The generation of the CRD that was last reconciled by the operator.
        /// </summary>
        [Input("observedGeneration")]
        public Input<int>? ObservedGeneration { get; set; }

        [Input("optimizationResult")]
        private InputMap<object>? _optimizationResult;

        /// <summary>
        /// A JSON object describing the optimization result.
        /// </summary>
        public InputMap<object> OptimizationResult
        {
            get => _optimizationResult ?? (_optimizationResult = new InputMap<object>());
            set => _optimizationResult = value;
        }

        /// <summary>
        /// The session identifier for requests to Cruise Control pertaining to this KafkaRebalance resource. This is used by the Kafka Rebalance operator to track the status of ongoing rebalancing operations.
        /// </summary>
        [Input("sessionId")]
        public Input<string>? SessionId { get; set; }

        public KafkaRebalanceStatusArgs()
        {
        }
    }
}
