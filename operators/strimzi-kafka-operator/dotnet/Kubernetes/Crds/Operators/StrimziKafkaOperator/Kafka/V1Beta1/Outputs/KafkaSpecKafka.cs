// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1
{

    [OutputType]
    public sealed class KafkaSpecKafka
    {
        /// <summary>
        /// The pod's affinity rules.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaAffinity Affinity;
        /// <summary>
        /// Authorization configuration for Kafka brokers.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaAuthorization Authorization;
        /// <summary>
        /// The image of the init container used for initializing the `broker.rack`.
        /// </summary>
        public readonly string BrokerRackInitImage;
        /// <summary>
        /// Kafka broker config properties with the following prefixes cannot be set: listeners, advertised., broker., listener., host.name, port, inter.broker.listener.name, sasl., ssl., security., password., principal.builder.class, log.dir, zookeeper.connect, zookeeper.set.acl, authorizer., super.user, cruise.control.metrics.topic, cruise.control.metrics.reporter.bootstrap.servers (with the exception of: zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols,cruise.control.metrics.topic.num.partitions, cruise.control.metrics.topic.replication.factor, cruise.control.metrics.topic.retention.ms,cruise.control.metrics.topic.auto.create.retries, cruise.control.metrics.topic.auto.create.timeout.ms).
        /// </summary>
        public readonly ImmutableDictionary<string, object> Config;
        /// <summary>
        /// The docker image for the pods. The default value depends on the configured `Kafka.spec.kafka.version`.
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// JMX Options for Kafka brokers.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaJmxOptions JmxOptions;
        /// <summary>
        /// JVM Options for pods.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaJvmOptions JvmOptions;
        /// <summary>
        /// Configures listeners of Kafka brokers.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaListeners Listeners;
        /// <summary>
        /// Pod liveness checking.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaLivenessProbe LivenessProbe;
        /// <summary>
        /// Logging configuration for Kafka.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaLogging Logging;
        /// <summary>
        /// The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter for details of the structure of this configuration.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Metrics;
        /// <summary>
        /// Configuration of the `broker.rack` broker config.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaRack Rack;
        /// <summary>
        /// Pod readiness checking.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaReadinessProbe ReadinessProbe;
        /// <summary>
        /// The number of pods in the cluster.
        /// </summary>
        public readonly int Replicas;
        /// <summary>
        /// CPU and memory resources to reserve.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaResources Resources;
        /// <summary>
        /// Storage configuration (disk). Cannot be updated.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaStorage Storage;
        /// <summary>
        /// Template for Kafka cluster resources. The template allows users to specify how are the `StatefulSet`, `Pods` and `Services` generated.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaTemplate Template;
        /// <summary>
        /// TLS sidecar configuration.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaTlsSidecar TlsSidecar;
        /// <summary>
        /// The pod's tolerations.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaTolerations> Tolerations;
        /// <summary>
        /// The kafka broker version. Defaults to {DefaultKafkaVersion}. Consult the user documentation to understand the process required to upgrade or downgrade the version.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private KafkaSpecKafka(
            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaAffinity affinity,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaAuthorization authorization,

            string brokerRackInitImage,

            ImmutableDictionary<string, object> config,

            string image,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaJmxOptions jmxOptions,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaJvmOptions jvmOptions,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaListeners listeners,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaLivenessProbe livenessProbe,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaLogging logging,

            ImmutableDictionary<string, object> metrics,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaRack rack,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaReadinessProbe readinessProbe,

            int replicas,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaResources resources,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaStorage storage,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaTemplate template,

            Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaTlsSidecar tlsSidecar,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Kafka.V1Beta1.KafkaSpecKafkaTolerations> tolerations,

            string version)
        {
            Affinity = affinity;
            Authorization = authorization;
            BrokerRackInitImage = brokerRackInitImage;
            Config = config;
            Image = image;
            JmxOptions = jmxOptions;
            JvmOptions = jvmOptions;
            Listeners = listeners;
            LivenessProbe = livenessProbe;
            Logging = logging;
            Metrics = metrics;
            Rack = rack;
            ReadinessProbe = readinessProbe;
            Replicas = replicas;
            Resources = resources;
            Storage = storage;
            Template = template;
            TlsSidecar = tlsSidecar;
            Tolerations = tolerations;
            Version = version;
        }
    }
}
