// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace core {
    export namespace v1alpha2 {
        /**
         * An ApplicationConfigurationSpec defines the desired state of a ApplicationConfiguration.
         */
        export interface ApplicationConfigurationSpec {
            /**
             * Components of which this ApplicationConfiguration consists. Each component will be used to instantiate a workload.
             */
            components: outputs.core.v1alpha2.ApplicationConfigurationSpecComponents[];
        }

        /**
         * An ApplicationConfigurationComponent specifies a component of an ApplicationConfiguration. Each component is used to instantiate a workload.
         */
        export interface ApplicationConfigurationSpecComponents {
            /**
             * ComponentName specifies a component of which an ApplicationConfiguration should consist. The named component must exist.
             */
            componentName: string;
            /**
             * ParameterValues specify values for the the specified component's parameters. Any parameter required by the component must be specified.
             */
            parameterValues?: outputs.core.v1alpha2.ApplicationConfigurationSpecComponentsParameterValues[];
            /**
             * Scopes in which the specified component should exist.
             */
            scopes?: outputs.core.v1alpha2.ApplicationConfigurationSpecComponentsScopes[];
            /**
             * Traits of the specified component.
             */
            traits?: outputs.core.v1alpha2.ApplicationConfigurationSpecComponentsTraits[];
        }

        /**
         * A ComponentParameterValue specifies a value for a named parameter. The associated component must publish a parameter with this name.
         */
        export interface ApplicationConfigurationSpecComponentsParameterValues {
            /**
             * Name of the component parameter to set.
             */
            name: string;
            /**
             * Value to set.
             */
            value: outputs.core.v1alpha2.ApplicationConfigurationSpecComponentsParameterValuesValue;
        }

        export interface ApplicationConfigurationSpecComponentsParameterValuesValue {
        }

        /**
         * A ComponentScope specifies a scope in which a component should exist.
         */
        export interface ApplicationConfigurationSpecComponentsScopes {
            /**
             * A ScopeReference must refer to an OAM scope resource.
             */
            scopeRef: outputs.core.v1alpha2.ApplicationConfigurationSpecComponentsScopesScopeRef;
        }

        /**
         * A ScopeReference must refer to an OAM scope resource.
         */
        export interface ApplicationConfigurationSpecComponentsScopesScopeRef {
            /**
             * APIVersion of the referenced object.
             */
            apiVersion: string;
            /**
             * Kind of the referenced object.
             */
            kind: string;
            /**
             * Name of the referenced object.
             */
            name: string;
            /**
             * UID of the referenced object.
             */
            uid?: string;
        }

        /**
         * A ComponentTrait specifies a trait that should be applied to a component.
         */
        export interface ApplicationConfigurationSpecComponentsTraits {
            /**
             * A Trait that will be created for the component
             */
            trait: {[key: string]: any};
        }

        /**
         * An ApplicationConfigurationStatus represents the observed state of a ApplicationConfiguration.
         */
        export interface ApplicationConfigurationStatus {
            /**
             * Conditions of the resource.
             */
            conditions?: outputs.core.v1alpha2.ApplicationConfigurationStatusConditions[];
            /**
             * Workloads created by this ApplicationConfiguration.
             */
            workloads?: outputs.core.v1alpha2.ApplicationConfigurationStatusWorkloads[];
        }

        /**
         * A Condition that may apply to a resource.
         */
        export interface ApplicationConfigurationStatusConditions {
            /**
             * LastTransitionTime is the last time this condition transitioned from one status to another.
             */
            lastTransitionTime: string;
            /**
             * A Message containing details about this condition's last transition from one status to another, if any.
             */
            message?: string;
            /**
             * A Reason for this condition's last transition from one status to another.
             */
            reason: string;
            /**
             * Status of this condition; is it currently True, False, or Unknown?
             */
            status: string;
            /**
             * Type of this condition. At most one of each condition type may apply to a resource at any point in time.
             */
            type: string;
        }

        /**
         * A WorkloadStatus represents the status of a workload.
         */
        export interface ApplicationConfigurationStatusWorkloads {
            /**
             * ComponentName that produced this workload.
             */
            componentName?: string;
            /**
             * Traits associated with this workload.
             */
            traits?: outputs.core.v1alpha2.ApplicationConfigurationStatusWorkloadsTraits[];
            /**
             * Reference to a workload created by an ApplicationConfiguration.
             */
            workloadRef?: outputs.core.v1alpha2.ApplicationConfigurationStatusWorkloadsWorkloadRef;
        }

        /**
         * A WorkloadTrait represents a trait associated with a workload.
         */
        export interface ApplicationConfigurationStatusWorkloadsTraits {
            /**
             * Reference to a trait created by an ApplicationConfiguration.
             */
            traitRef: outputs.core.v1alpha2.ApplicationConfigurationStatusWorkloadsTraitsTraitRef;
        }

        /**
         * Reference to a trait created by an ApplicationConfiguration.
         */
        export interface ApplicationConfigurationStatusWorkloadsTraitsTraitRef {
            /**
             * APIVersion of the referenced object.
             */
            apiVersion: string;
            /**
             * Kind of the referenced object.
             */
            kind: string;
            /**
             * Name of the referenced object.
             */
            name: string;
            /**
             * UID of the referenced object.
             */
            uid?: string;
        }

        /**
         * Reference to a workload created by an ApplicationConfiguration.
         */
        export interface ApplicationConfigurationStatusWorkloadsWorkloadRef {
            /**
             * APIVersion of the referenced object.
             */
            apiVersion: string;
            /**
             * Kind of the referenced object.
             */
            kind: string;
            /**
             * Name of the referenced object.
             */
            name: string;
            /**
             * UID of the referenced object.
             */
            uid?: string;
        }
    }
}
