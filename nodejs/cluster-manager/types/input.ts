// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace operator {
    export namespace v1 {
        /**
         * Spec represents a desired deployment configuration of controllers that govern registration and work distribution for attached Klusterlets.
         */
        export interface ClusterManagerSpec {
            /**
             * RegistrationImagePullSpec represents the desired image of registration controller installed on hub.
             */
            registrationImagePullSpec?: pulumi.Input<string>;
        }

        /**
         * Status represents the current status of controllers that govern the lifecycle of managed clusters.
         */
        export interface ClusterManagerStatus {
            /**
             * Conditions contain the different condition statuses for this ClusterManager. Valid condition types are: Applied: components in hub are applied. Available: components in hub are available and ready to serve. Progressing: components in hub are in a transitioning state. Degraded: components in hub do not match the desired configuration and only provide degraded service.
             */
            conditions?: pulumi.Input<pulumi.Input<inputs.operator.v1.ClusterManagerStatusConditions>[]>;
            /**
             * Generations are used to determine when an item needs to be reconciled or has changed in a way that needs a reaction.
             */
            generations?: pulumi.Input<pulumi.Input<inputs.operator.v1.ClusterManagerStatusGenerations>[]>;
            /**
             * ObservedGeneration is the last generation change you've dealt with
             */
            observedGeneration?: pulumi.Input<number>;
            /**
             * RelatedResources are used to track the resources that are related to this ClusterManager
             */
            relatedResources?: pulumi.Input<pulumi.Input<inputs.operator.v1.ClusterManagerStatusRelatedResources>[]>;
        }

        /**
         * StatusCondition contains condition information.
         */
        export interface ClusterManagerStatusConditions {
            /**
             * LastTransitionTime is the last time the condition changed from one status to another.
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * Message is a human-readable message indicating details about the last status change.
             */
            message?: pulumi.Input<string>;
            /**
             * Reason is a (brief) reason for the condition's last status change.
             */
            reason?: pulumi.Input<string>;
            /**
             * Status is the status of the condition. One of True, False, Unknown.
             */
            status?: pulumi.Input<string>;
            /**
             * Type is the type of the cluster condition.
             */
            type?: pulumi.Input<string>;
        }

        /**
         * GenerationStatus keeps track of the generation for a given resource so that decisions about forced updates can be made. the definition matches the GenerationStatus defined in github.com/openshift/api/v1
         */
        export interface ClusterManagerStatusGenerations {
            /**
             * group is the group of the thing you're tracking
             */
            group?: pulumi.Input<string>;
            /**
             * lastGeneration is the last generation of the thing that controller applies
             */
            lastGeneration?: pulumi.Input<number>;
            /**
             * name is the name of the thing you're tracking
             */
            name?: pulumi.Input<string>;
            /**
             * namespace is where the thing you're tracking is
             */
            namespace?: pulumi.Input<string>;
            /**
             * resource is the resource type of the thing you're tracking
             */
            resource?: pulumi.Input<string>;
            /**
             * version is the version of the thing you're tracking
             */
            version?: pulumi.Input<string>;
        }

        /**
         * RelatedResourceMeta represents the resource that is managed by an operator
         */
        export interface ClusterManagerStatusRelatedResources {
            /**
             * group is the group of the thing you're tracking
             */
            group?: pulumi.Input<string>;
            /**
             * name is the name of the thing you're tracking
             */
            name?: pulumi.Input<string>;
            /**
             * namespace is where the thing you're tracking is
             */
            namespace?: pulumi.Input<string>;
            /**
             * resource is the resource type of the thing you're tracking
             */
            resource?: pulumi.Input<string>;
            /**
             * version is the version of the thing you're tracking
             */
            version?: pulumi.Input<string>;
        }
    }
}
