// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace kafka {
    export namespace v1alpha1 {
        /**
         * The specification of the Kafka Bridge.
         */
        export interface KafkaBridgeSpec {
            /**
             * Authentication configuration for connecting to the cluster.
             */
            authentication?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecAuthentication>;
            /**
             * A list of host:port pairs for establishing the initial connection to the Kafka cluster.
             */
            bootstrapServers: pulumi.Input<string>;
            /**
             * Kafka consumer related configuration.
             */
            consumer?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecConsumer>;
            /**
             * Enable the metrics for the Kafka Bridge. Default is false.
             */
            enableMetrics?: pulumi.Input<boolean>;
            /**
             * The HTTP related configuration.
             */
            http?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecHttp>;
            /**
             * The docker image for the pods.
             */
            image?: pulumi.Input<string>;
            /**
             * **Currently not supported** JVM Options for pods.
             */
            jvmOptions?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecJvmOptions>;
            /**
             * Pod liveness checking.
             */
            livenessProbe?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecLivenessProbe>;
            /**
             * Logging configuration for Kafka Bridge.
             */
            logging?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecLogging>;
            /**
             * Kafka producer related configuration.
             */
            producer?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecProducer>;
            /**
             * Pod readiness checking.
             */
            readinessProbe?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecReadinessProbe>;
            /**
             * The number of pods in the `Deployment`.
             */
            replicas?: pulumi.Input<number>;
            /**
             * CPU and memory resources to reserve.
             */
            resources?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecResources>;
            /**
             * Template for Kafka Bridge resources. The template allows users to specify how is the `Deployment` and `Pods` generated.
             */
            template?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplate>;
            /**
             * TLS configuration for connecting Kafka Bridge to the cluster.
             */
            tls?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTls>;
            /**
             * The configuration of tracing in Kafka Bridge.
             */
            tracing?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTracing>;
        }

        /**
         * Authentication configuration for connecting to the cluster.
         */
        export interface KafkaBridgeSpecAuthentication {
            /**
             * Link to Kubernetes Secret containing the access token which was obtained from the authorization server.
             */
            accessToken?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecAuthenticationAccessToken>;
            /**
             * Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.
             */
            accessTokenIsJwt?: pulumi.Input<boolean>;
            /**
             * Reference to the `Secret` which holds the certificate and private key pair.
             */
            certificateAndKey?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecAuthenticationCertificateAndKey>;
            /**
             * OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
             */
            clientId?: pulumi.Input<string>;
            /**
             * Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
             */
            clientSecret?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecAuthenticationClientSecret>;
            /**
             * Enable or disable TLS hostname verification. Default value is `false`.
             */
            disableTlsHostnameVerification?: pulumi.Input<boolean>;
            /**
             * Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.
             */
            maxTokenExpirySeconds?: pulumi.Input<number>;
            /**
             * Reference to the `Secret` which holds the password.
             */
            passwordSecret?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecAuthenticationPasswordSecret>;
            /**
             * Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.
             */
            refreshToken?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecAuthenticationRefreshToken>;
            /**
             * OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.
             */
            scope?: pulumi.Input<string>;
            /**
             * Trusted certificates for TLS connection to the OAuth server.
             */
            tlsTrustedCertificates?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecAuthenticationTlsTrustedCertificates>[]>;
            /**
             * Authorization server token endpoint URI.
             */
            tokenEndpointUri?: pulumi.Input<string>;
            /**
             * Authentication type. Currently the only supported types are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.
             */
            type: pulumi.Input<string>;
            /**
             * Username used for the authentication.
             */
            username?: pulumi.Input<string>;
        }

        /**
         * Link to Kubernetes Secret containing the access token which was obtained from the authorization server.
         */
        export interface KafkaBridgeSpecAuthenticationAccessToken {
            /**
             * The key under which the secret value is stored in the Kubernetes Secret.
             */
            key: pulumi.Input<string>;
            /**
             * The name of the Kubernetes Secret containing the secret value.
             */
            secretName: pulumi.Input<string>;
        }

        /**
         * Reference to the `Secret` which holds the certificate and private key pair.
         */
        export interface KafkaBridgeSpecAuthenticationCertificateAndKey {
            /**
             * The name of the file certificate in the Secret.
             */
            certificate: pulumi.Input<string>;
            /**
             * The name of the private key in the Secret.
             */
            key: pulumi.Input<string>;
            /**
             * The name of the Secret containing the certificate.
             */
            secretName: pulumi.Input<string>;
        }

        /**
         * Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
         */
        export interface KafkaBridgeSpecAuthenticationClientSecret {
            /**
             * The key under which the secret value is stored in the Kubernetes Secret.
             */
            key: pulumi.Input<string>;
            /**
             * The name of the Kubernetes Secret containing the secret value.
             */
            secretName: pulumi.Input<string>;
        }

        /**
         * Reference to the `Secret` which holds the password.
         */
        export interface KafkaBridgeSpecAuthenticationPasswordSecret {
            /**
             * The name of the key in the Secret under which the password is stored.
             */
            password: pulumi.Input<string>;
            /**
             * The name of the Secret containing the password.
             */
            secretName: pulumi.Input<string>;
        }

        /**
         * Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.
         */
        export interface KafkaBridgeSpecAuthenticationRefreshToken {
            /**
             * The key under which the secret value is stored in the Kubernetes Secret.
             */
            key: pulumi.Input<string>;
            /**
             * The name of the Kubernetes Secret containing the secret value.
             */
            secretName: pulumi.Input<string>;
        }

        export interface KafkaBridgeSpecAuthenticationTlsTrustedCertificates {
            /**
             * The name of the file certificate in the Secret.
             */
            certificate: pulumi.Input<string>;
            /**
             * The name of the Secret containing the certificate.
             */
            secretName: pulumi.Input<string>;
        }

        /**
         * Kafka consumer related configuration.
         */
        export interface KafkaBridgeSpecConsumer {
            /**
             * The Kafka consumer configuration used for consumer instances created by the bridge. Properties with the following prefixes cannot be set: ssl., bootstrap.servers, group.id, sasl., security. (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).
             */
            config?: pulumi.Input<{[key: string]: any}>;
        }

        /**
         * The HTTP related configuration.
         */
        export interface KafkaBridgeSpecHttp {
            /**
             * CORS configuration for the HTTP Bridge.
             */
            cors?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecHttpCors>;
            /**
             * The port which is the server listening on.
             */
            port?: pulumi.Input<number>;
        }

        /**
         * CORS configuration for the HTTP Bridge.
         */
        export interface KafkaBridgeSpecHttpCors {
            /**
             * List of allowed HTTP methods.
             */
            allowedMethods: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * List of allowed origins. Java regular expressions can be used.
             */
            allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * **Currently not supported** JVM Options for pods.
         */
        export interface KafkaBridgeSpecJvmOptions {
            /**
             * A map of -XX options to the JVM.
             */
            -XX?: pulumi.Input<{[key: string]: any}>;
            /**
             * -Xms option to to the JVM.
             */
            -Xms?: pulumi.Input<string>;
            /**
             * -Xmx option to to the JVM.
             */
            -Xmx?: pulumi.Input<string>;
            /**
             * Specifies whether the Garbage Collection logging is enabled. The default is false.
             */
            gcLoggingEnabled?: pulumi.Input<boolean>;
            /**
             * A map of additional system properties which will be passed using the `-D` option to the JVM.
             */
            javaSystemProperties?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecJvmOptionsJavaSystemProperties>[]>;
        }

        export interface KafkaBridgeSpecJvmOptionsJavaSystemProperties {
            /**
             * The system property name.
             */
            name?: pulumi.Input<string>;
            /**
             * The system property value.
             */
            value?: pulumi.Input<string>;
        }

        /**
         * Pod liveness checking.
         */
        export interface KafkaBridgeSpecLivenessProbe {
            /**
             * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
             */
            failureThreshold?: pulumi.Input<number>;
            /**
             * The initial delay before first the health is first checked.
             */
            initialDelaySeconds?: pulumi.Input<number>;
            /**
             * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
             */
            periodSeconds?: pulumi.Input<number>;
            /**
             * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
             */
            successThreshold?: pulumi.Input<number>;
            /**
             * The timeout for each attempted health check.
             */
            timeoutSeconds?: pulumi.Input<number>;
        }

        /**
         * Logging configuration for Kafka Bridge.
         */
        export interface KafkaBridgeSpecLogging {
            /**
             * A Map from logger name to logger level.
             */
            loggers?: pulumi.Input<{[key: string]: any}>;
            /**
             * The name of the `ConfigMap` from which to get the logging configuration.
             */
            name?: pulumi.Input<string>;
            /**
             * Logging type, must be either 'inline' or 'external'.
             */
            type: pulumi.Input<string>;
        }

        /**
         * Kafka producer related configuration.
         */
        export interface KafkaBridgeSpecProducer {
            /**
             * The Kafka producer configuration used for producer instances created by the bridge. Properties with the following prefixes cannot be set: ssl., bootstrap.servers, sasl., security. (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).
             */
            config?: pulumi.Input<{[key: string]: any}>;
        }

        /**
         * Pod readiness checking.
         */
        export interface KafkaBridgeSpecReadinessProbe {
            /**
             * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
             */
            failureThreshold?: pulumi.Input<number>;
            /**
             * The initial delay before first the health is first checked.
             */
            initialDelaySeconds?: pulumi.Input<number>;
            /**
             * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
             */
            periodSeconds?: pulumi.Input<number>;
            /**
             * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
             */
            successThreshold?: pulumi.Input<number>;
            /**
             * The timeout for each attempted health check.
             */
            timeoutSeconds?: pulumi.Input<number>;
        }

        /**
         * CPU and memory resources to reserve.
         */
        export interface KafkaBridgeSpecResources {
            limits?: pulumi.Input<{[key: string]: any}>;
            requests?: pulumi.Input<{[key: string]: any}>;
        }

        /**
         * Template for Kafka Bridge resources. The template allows users to specify how is the `Deployment` and `Pods` generated.
         */
        export interface KafkaBridgeSpecTemplate {
            /**
             * Template for Kafka Bridge API `Service`.
             */
            apiService?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplateApiService>;
            /**
             * Template for the Kafka Bridge container.
             */
            bridgeContainer?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplateBridgeContainer>;
            /**
             * Template for Kafka Bridge `Deployment`.
             */
            deployment?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplateDeployment>;
            /**
             * Template for Kafka Bridge `Pods`.
             */
            pod?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePod>;
            /**
             * Template for Kafka Bridge `PodDisruptionBudget`.
             */
            podDisruptionBudget?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodDisruptionBudget>;
        }

        /**
         * Template for Kafka Bridge API `Service`.
         */
        export interface KafkaBridgeSpecTemplateApiService {
            /**
             * Metadata applied to the resource.
             */
            metadata?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplateApiServiceMetadata>;
        }

        /**
         * Metadata applied to the resource.
         */
        export interface KafkaBridgeSpecTemplateApiServiceMetadata {
            /**
             * Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
             */
            labels?: pulumi.Input<{[key: string]: any}>;
        }

        /**
         * Template for the Kafka Bridge container.
         */
        export interface KafkaBridgeSpecTemplateBridgeContainer {
            /**
             * Environment variables which should be applied to the container.
             */
            env?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplateBridgeContainerEnv>[]>;
            /**
             * Security context for the container.
             */
            securityContext?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplateBridgeContainerSecurityContext>;
        }

        export interface KafkaBridgeSpecTemplateBridgeContainerEnv {
            /**
             * The environment variable key.
             */
            name?: pulumi.Input<string>;
            /**
             * The environment variable value.
             */
            value?: pulumi.Input<string>;
        }

        /**
         * Security context for the container.
         */
        export interface KafkaBridgeSpecTemplateBridgeContainerSecurityContext {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplateBridgeContainerSecurityContextCapabilities>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplateBridgeContainerSecurityContextSeLinuxOptions>;
            windowsOptions?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplateBridgeContainerSecurityContextWindowsOptions>;
        }

        export interface KafkaBridgeSpecTemplateBridgeContainerSecurityContextCapabilities {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface KafkaBridgeSpecTemplateBridgeContainerSecurityContextSeLinuxOptions {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface KafkaBridgeSpecTemplateBridgeContainerSecurityContextWindowsOptions {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
        }

        /**
         * Template for Kafka Bridge `Deployment`.
         */
        export interface KafkaBridgeSpecTemplateDeployment {
            /**
             * Metadata applied to the resource.
             */
            metadata?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplateDeploymentMetadata>;
        }

        /**
         * Metadata applied to the resource.
         */
        export interface KafkaBridgeSpecTemplateDeploymentMetadata {
            /**
             * Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
             */
            labels?: pulumi.Input<{[key: string]: any}>;
        }

        /**
         * Template for Kafka Bridge `Pods`.
         */
        export interface KafkaBridgeSpecTemplatePod {
            /**
             * The pod's affinity rules.
             */
            affinity?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinity>;
            /**
             * List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
             */
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodImagePullSecrets>[]>;
            /**
             * Metadata applied to the resource.
             */
            metadata?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodMetadata>;
            /**
             * The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.
             */
            priorityClassName?: pulumi.Input<string>;
            /**
             * The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
             */
            schedulerName?: pulumi.Input<string>;
            /**
             * Configures pod-level security attributes and common container settings.
             */
            securityContext?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodSecurityContext>;
            /**
             * The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
             */
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            /**
             * The pod's tolerations.
             */
            tolerations?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodTolerations>[]>;
        }

        /**
         * The pod's affinity rules.
         */
        export interface KafkaBridgeSpecTemplatePodAffinity {
            nodeAffinity?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityNodeAffinity>;
            podAffinity?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityPodAffinity>;
            podAntiAffinity?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityPodAntiAffinity>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference>;
            weight?: pulumi.Input<number>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields>[]>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms>[]>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields>[]>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution>[]>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm>;
            weight?: pulumi.Input<number>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey?: pulumi.Input<string>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions>[]>;
            matchLabels?: pulumi.Input<{[key: string]: any}>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey?: pulumi.Input<string>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions>[]>;
            matchLabels?: pulumi.Input<{[key: string]: any}>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution>[]>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm>;
            weight?: pulumi.Input<number>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey?: pulumi.Input<string>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions>[]>;
            matchLabels?: pulumi.Input<{[key: string]: any}>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey?: pulumi.Input<string>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions>[]>;
            matchLabels?: pulumi.Input<{[key: string]: any}>;
        }

        export interface KafkaBridgeSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Template for Kafka Bridge `PodDisruptionBudget`.
         */
        export interface KafkaBridgeSpecTemplatePodDisruptionBudget {
            /**
             * Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
             */
            maxUnavailable?: pulumi.Input<number>;
            /**
             * Metadata to apply to the `PodDistruptionBugetTemplate` resource.
             */
            metadata?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodDisruptionBudgetMetadata>;
        }

        /**
         * Metadata to apply to the `PodDistruptionBugetTemplate` resource.
         */
        export interface KafkaBridgeSpecTemplatePodDisruptionBudgetMetadata {
            /**
             * Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
             */
            labels?: pulumi.Input<{[key: string]: any}>;
        }

        export interface KafkaBridgeSpecTemplatePodImagePullSecrets {
            name?: pulumi.Input<string>;
        }

        /**
         * Metadata applied to the resource.
         */
        export interface KafkaBridgeSpecTemplatePodMetadata {
            /**
             * Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
             */
            labels?: pulumi.Input<{[key: string]: any}>;
        }

        /**
         * Configures pod-level security attributes and common container settings.
         */
        export interface KafkaBridgeSpecTemplatePodSecurityContext {
            fsGroup?: pulumi.Input<number>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodSecurityContextSeLinuxOptions>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodSecurityContextSysctls>[]>;
            windowsOptions?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTemplatePodSecurityContextWindowsOptions>;
        }

        export interface KafkaBridgeSpecTemplatePodSecurityContextSeLinuxOptions {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface KafkaBridgeSpecTemplatePodSecurityContextSysctls {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface KafkaBridgeSpecTemplatePodSecurityContextWindowsOptions {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
        }

        export interface KafkaBridgeSpecTemplatePodTolerations {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        /**
         * TLS configuration for connecting Kafka Bridge to the cluster.
         */
        export interface KafkaBridgeSpecTls {
            /**
             * Trusted certificates for TLS connection.
             */
            trustedCertificates?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeSpecTlsTrustedCertificates>[]>;
        }

        export interface KafkaBridgeSpecTlsTrustedCertificates {
            /**
             * The name of the file certificate in the Secret.
             */
            certificate: pulumi.Input<string>;
            /**
             * The name of the Secret containing the certificate.
             */
            secretName: pulumi.Input<string>;
        }

        /**
         * The configuration of tracing in Kafka Bridge.
         */
        export interface KafkaBridgeSpecTracing {
            /**
             * Type of the tracing used. Currently the only supported type is `jaeger` for Jaeger tracing.
             */
            type: pulumi.Input<string>;
        }

        /**
         * The status of the Kafka Bridge.
         */
        export interface KafkaBridgeStatus {
            /**
             * List of status conditions.
             */
            conditions?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeStatusConditions>[]>;
            /**
             * The generation of the CRD that was last reconciled by the operator.
             */
            observedGeneration?: pulumi.Input<number>;
            /**
             * Label selector for pods providing this resource.
             */
            podSelector?: pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeStatusPodSelector>;
            /**
             * The current number of pods being used to provide this resource.
             */
            replicas?: pulumi.Input<number>;
            /**
             * The URL at which external client applications can access the Kafka Bridge.
             */
            url?: pulumi.Input<string>;
        }

        export interface KafkaBridgeStatusConditions {
            /**
             * Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * Human-readable message indicating details about the condition's last transition.
             */
            message?: pulumi.Input<string>;
            /**
             * The reason for the condition's last transition (a single word in CamelCase).
             */
            reason?: pulumi.Input<string>;
            /**
             * The status of the condition, either True, False or Unknown.
             */
            status?: pulumi.Input<string>;
            /**
             * The unique identifier of a condition, used to distinguish between other conditions in the resource.
             */
            type?: pulumi.Input<string>;
        }

        /**
         * Label selector for pods providing this resource.
         */
        export interface KafkaBridgeStatusPodSelector {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.kafka.v1alpha1.KafkaBridgeStatusPodSelectorMatchExpressions>[]>;
            matchLabels?: pulumi.Input<{[key: string]: any}>;
        }

        export interface KafkaBridgeStatusPodSelectorMatchExpressions {
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

    }
}
